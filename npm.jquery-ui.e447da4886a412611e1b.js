/*! For license information please see npm.jquery-ui.e447da4886a412611e1b.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{MIQu:function(t,e,i){var s,n,a;n=[i("EVdn"),i("Qwlt")],void 0===(a="function"==typeof(s=function(t){var e,i=0,s=Array.prototype.slice;return t.cleanData=(e=t.cleanData,function(i){var s,n,a;for(a=0;null!=(n=i[a]);a++)try{(s=t._data(n,"events"))&&s.remove&&t(n).triggerHandler("remove")}catch(t){}e(i)}),t.widget=function(e,i,s){var n,a,o,h={},u=e.split(".")[0],r=u+"-"+(e=e.split(".")[1]);return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[":"][r.toLowerCase()]=function(e){return!!t.data(e,r)},t[u]=t[u]||{},n=t[u][e],a=t[u][e]=function(t,e){if(!this._createWidget)return new a(t,e);arguments.length&&this._createWidget(t,e)},t.extend(a,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),(o=new i).options=t.widget.extend({},o.options),t.each(s,(function(e,s){t.isFunction(s)?h[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,a=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=a,e}}():h[e]=s})),a.prototype=t.widget.extend(o,{widgetEventPrefix:n&&o.widgetEventPrefix||e},h,{constructor:a,namespace:u,widgetName:e,widgetFullName:r}),n?(t.each(n._childConstructors,(function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,a,i._proto)})),delete n._childConstructors):i._childConstructors.push(a),t.widget.bridge(e,a),a},t.widget.extend=function(e){for(var i,n,a=s.call(arguments,1),o=0,h=a.length;o<h;o++)for(i in a[o])n=a[o][i],a[o].hasOwnProperty(i)&&void 0!==n&&(t.isPlainObject(n)?e[i]=t.isPlainObject(e[i])?t.widget.extend({},e[i],n):t.widget.extend({},n):e[i]=n);return e},t.widget.bridge=function(e,i){var n=i.prototype.widgetFullName||e;t.fn[e]=function(a){var o="string"==typeof a,h=s.call(arguments,1),u=this;return o?this.length||"instance"!==a?this.each((function(){var i,s=t.data(this,n);return"instance"===a?(u=s,!1):s?t.isFunction(s[a])&&"_"!==a.charAt(0)?(i=s[a].apply(s,h))!==s&&void 0!==i?(u=i&&i.jquery?u.pushStack(i.get()):i,!1):void 0:t.error("no such method '"+a+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; attempted to call method '"+a+"'")})):u=void 0:(h.length&&(a=t.widget.extend.apply(null,[a].concat(h))),this.each((function(){var e=t.data(this,n);e?(e.option(a||{}),e._init&&e._init()):t.data(this,n,new i(a,this))}))),u}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(e,s){s=t(s||this.defaultElement||this)[0],this.element=t(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},s!==this&&(t.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===s&&this.destroy()}}),this.document=t(s.style?s.ownerDocument:s.document||s),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,(function(t,i){e._removeClass(i,t)})),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,a,o=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(o={},s=e.split("."),e=s.shift(),s.length){for(n=o[e]=t.widget.extend({},this.options[e]),a=0;a<s.length-1;a++)n[s[a]]=n[s[a]]||{},n=n[s[a]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];o[e]=i}return this._setOptions(o),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){var i=[],s=this;function n(n,a){var o,h;for(h=0;h<n.length;h++)o=s.classesElementLookup[n[h]]||t(),o=e.add?t(t.unique(o.get().concat(e.element.get()))):t(o.not(e.element).get()),s.classesElementLookup[n[h]]=o,i.push(n[h]),a&&e.classes[n[h]]&&i.push(e.classes[n[h]])}return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:"_untrackClassesElement"}),e.keys&&n(e.keys.match(/\S+/g)||[],!0),e.extra&&n(e.extra.match(/\S+/g)||[]),i.join(" ")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,(function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))}))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s="boolean"==typeof s?s:i;var n="string"==typeof t||null===t,a={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return a.element.toggleClass(this._classes(a),s),this},_on:function(e,i,s){var n,a=this;"boolean"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,(function(s,o){function h(){if(e||!0!==a.options.disabled&&!t(this).hasClass("ui-state-disabled"))return("string"==typeof o?a[o]:o).apply(a,arguments)}"string"!=typeof o&&(h.guid=o.guid=o.guid||h.guid||t.guid++);var u=s.match(/^([\w:-]*)\s*(.*)$/),r=u[1]+a.eventNamespace,l=u[2];l?n.on(r,l,h):i.on(r,h)}))},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){var i=this;return setTimeout((function(){return("string"==typeof t?i[t]:t).apply(i,arguments)}),e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,"ui-state-hover")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,"ui-state-focus")},focusout:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-focus")}})},_trigger:function(e,i,s){var n,a,o=this.options[e];if(s=s||{},(i=t.Event(i)).type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(t.isFunction(o)&&!1===o.apply(this.element[0],[i].concat(s))||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},(function(e,i){t.Widget.prototype["_"+e]=function(s,n,a){var o;"string"==typeof n&&(n={effect:n});var h=n?!0===n||"number"==typeof n?i:n.effect||i:e;"number"==typeof(n=n||{})&&(n={duration:n}),o=!t.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),o&&t.effects&&t.effects.effect[h]?s[e](n):h!==e&&s[h]?s[h](n.duration,n.easing,a):s.queue((function(i){t(this)[e](),a&&a.call(s[0]),i()}))}})),t.widget})?s.apply(e,n):s)||(t.exports=a)},NHgk:function(t,e,i){var s,n,a;n=[i("EVdn"),i("Qwlt")],void 0===(a="function"==typeof(s=function(t){return t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase())})?s.apply(e,n):s)||(t.exports=a)},QBwY:function(t,e,i){var s,n,a;n=[i("EVdn"),i("iGnl"),i("vBzC"),i("Qwlt"),i("MIQu")],void 0===(a="function"==typeof(s=function(t){return t.widget("ui.slider",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,s=this.options,n=this.element.find(".ui-slider-handle"),a=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;e<i;e++)a.push("<span tabindex='0'></span>");this.handles=n.add(t(a.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each((function(e){t(this).data("ui-slider-handle-index",e).attr("tabIndex",0)}))},_createRange:function(){var e=this.options;e.range?(!0===e.range&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=t("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),"min"!==e.range&&"max"!==e.range||this._addClass(this.range,"ui-slider-range-"+e.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,a,o,h,u,r=this,l=this.options;return!l.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each((function(e){var i=Math.abs(s-r.values(e));(n>i||n===i&&(e===r._lastChangedValue||r.values(e)===l.min))&&(n=i,a=t(this),o=e)})),!1!==this._start(e,o)&&(this._mouseSliding=!0,this._handleIndex=o,this._addClass(a,null,"ui-state-active"),a.trigger("focus"),h=a.offset(),u=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=u?{left:0,top:0}:{left:e.pageX-h.left-a.width()/2,top:e.pageY-h.top-a.height()/2-(parseInt(a.css("borderTopWidth"),10)||0)-(parseInt(a.css("borderBottomWidth"),10)||0)+(parseInt(a.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,o,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,s,n,a;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),(s=i/e)>1&&(s=1),s<0&&(s=0),"vertical"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),a=this._valueMin()+s*n,this._trimAlignValue(a)},_uiHash:function(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger("start",t,this._uiHash(e))},_slide:function(t,e,i){var s,n=this.value(),a=this.values();this._hasMultipleValues()&&(s=this.values(e?0:1),n=this.values(e),2===this.options.values.length&&!0===this.options.range&&(i=0===e?Math.min(s,i):Math.max(s,i)),a[e]=i),i!==n&&!1!==this._trigger("slide",t,this._uiHash(e,i,a))&&(this._hasMultipleValues()?this.values(e,i):this.value(i))},_stop:function(t,e){this._trigger("stop",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(e,i){var s,n,a;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,e);if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this._hasMultipleValues()?this._values(e):this.value();for(s=this.options.values,n=arguments[0],a=0;a<s.length;a+=1)s[a]=this._trimAlignValue(n[a]),this._change(null,a);this._refreshValue()},_setOption:function(e,i){var s,n=0;switch("range"===e&&!0===this.options.range&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(n=this.options.values.length),this._super(e,i),e){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),s=n-1;s>=0;s--)this._change(null,s);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t)},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),s=0;s<i.length;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(t<=this._valueMin())return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=i>0?e:-e),parseFloat(s.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step;(t=Math.round((t-e)/i)*i+e)>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=t.toString(),i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var e,i,s,n,a,o=this.options.range,h=this.options,u=this,r=!this._animateOff&&h.animate,l={};this._hasMultipleValues()?this.handles.each((function(s){i=(u.values(s)-u._valueMin())/(u._valueMax()-u._valueMin())*100,l["horizontal"===u.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[r?"animate":"css"](l,h.animate),!0===u.options.range&&("horizontal"===u.orientation?(0===s&&u.range.stop(1,1)[r?"animate":"css"]({left:i+"%"},h.animate),1===s&&u.range[r?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:h.animate})):(0===s&&u.range.stop(1,1)[r?"animate":"css"]({bottom:i+"%"},h.animate),1===s&&u.range[r?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:h.animate}))),e=i})):(s=this.value(),n=this._valueMin(),a=this._valueMax(),i=a!==n?(s-n)/(a-n)*100:0,l["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[r?"animate":"css"](l,h.animate),"min"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[r?"animate":"css"]({width:i+"%"},h.animate),"max"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[r?"animate":"css"]({width:100-i+"%"},h.animate),"min"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[r?"animate":"css"]({height:i+"%"},h.animate),"max"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[r?"animate":"css"]({height:100-i+"%"},h.animate))},_handleEvents:{keydown:function(e){var i,s,n,a=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,"ui-state-active"),!1===this._start(e,a)))return}switch(n=this.options.step,i=s=this._hasMultipleValues()?this.values(a):this.value(),e.keyCode){case t.ui.keyCode.HOME:s=this._valueMin();break;case t.ui.keyCode.END:s=this._valueMax();break;case t.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+n);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-n)}this._slide(e,a,s)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,"ui-state-active"))}}})})?s.apply(e,n):s)||(t.exports=a)},Qwlt:function(t,e,i){var s,n,a;n=[i("EVdn")],void 0===(a="function"==typeof(s=function(t){return t.ui=t.ui||{},t.ui.version="1.12.1"})?s.apply(e,n):s)||(t.exports=a)},iGnl:function(t,e,i){var s,n,a;n=[i("EVdn"),i("NHgk"),i("Qwlt"),i("MIQu")],void 0===(a="function"==typeof(s=function(t){var e=!1;return t(document).on("mouseup",(function(){e=!1})),t.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on("mousedown."+this.widgetName,(function(t){return e._mouseDown(t)})).on("click."+this.widgetName,(function(i){if(!0===t.data(i.target,e.widgetName+".preventClickEvent"))return t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1})),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!e){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a=!("string"!=typeof this.options.cancel||!i.target.nodeName)&&t(i.target).closest(this.options.cancel).length;return!(n&&!a&&this._mouseCapture(i)&&(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout((function(){s.mouseDelayMet=!0}),this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=!1!==this._mouseStart(i),!this._mouseStarted)?(i.preventDefault(),0):(!0===t.data(i.target,this.widgetName+".preventClickEvent")&&t.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return s._mouseMove(t)},this._mouseUpDelegate=function(t){return s._mouseUp(t)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),e=!0,0)))}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||document.documentMode<9)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=!1!==this._mouseStart(this._mouseDownEvent,e),this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(i){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,i.target===this._mouseDownEvent.target&&t.data(i.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(i)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,e=!1,i.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})?s.apply(e,n):s)||(t.exports=a)},vBzC:function(t,e,i){var s,n,a;n=[i("EVdn"),i("Qwlt")],void 0===(a="function"==typeof(s=function(t){return t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}})?s.apply(e,n):s)||(t.exports=a)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXVpL3VpL3dpZGdldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXVpL3VpL2llLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9qcXVlcnktdWkvdWkvd2lkZ2V0cy9zbGlkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pxdWVyeS11aS91aS92ZXJzaW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9qcXVlcnktdWkvdWkvd2lkZ2V0cy9tb3VzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXVpL3VpL2tleWNvZGUuanMiXSwibmFtZXMiOlsiJCIsIm9yaWciLCJ3aWRnZXRVdWlkIiwid2lkZ2V0U2xpY2UiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2xlYW5EYXRhIiwiZWxlbXMiLCJldmVudHMiLCJlbGVtIiwiaSIsIl9kYXRhIiwicmVtb3ZlIiwidHJpZ2dlckhhbmRsZXIiLCJlIiwid2lkZ2V0IiwibmFtZSIsImJhc2UiLCJleGlzdGluZ0NvbnN0cnVjdG9yIiwiY29uc3RydWN0b3IiLCJiYXNlUHJvdG90eXBlIiwicHJveGllZFByb3RvdHlwZSIsIm5hbWVzcGFjZSIsInNwbGl0IiwiZnVsbE5hbWUiLCJXaWRnZXQiLCJpc0FycmF5IiwiZXh0ZW5kIiwiYXBwbHkiLCJjb25jYXQiLCJleHByIiwidG9Mb3dlckNhc2UiLCJkYXRhIiwib3B0aW9ucyIsImVsZW1lbnQiLCJ0aGlzIiwiX2NyZWF0ZVdpZGdldCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInZlcnNpb24iLCJfcHJvdG8iLCJfY2hpbGRDb25zdHJ1Y3RvcnMiLCJlYWNoIiwicHJvcCIsInZhbHVlIiwiaXNGdW5jdGlvbiIsIl9zdXBlciIsIl9zdXBlckFwcGx5IiwiYXJncyIsInJldHVyblZhbHVlIiwiX19zdXBlciIsIl9fc3VwZXJBcHBseSIsIndpZGdldEV2ZW50UHJlZml4Iiwid2lkZ2V0TmFtZSIsIndpZGdldEZ1bGxOYW1lIiwiY2hpbGQiLCJjaGlsZFByb3RvdHlwZSIsInB1c2giLCJicmlkZ2UiLCJ0YXJnZXQiLCJrZXkiLCJpbnB1dCIsImNhbGwiLCJpbnB1dEluZGV4IiwiaW5wdXRMZW5ndGgiLCJoYXNPd25Qcm9wZXJ0eSIsInVuZGVmaW5lZCIsImlzUGxhaW5PYmplY3QiLCJvYmplY3QiLCJmbiIsImlzTWV0aG9kQ2FsbCIsIm1ldGhvZFZhbHVlIiwiaW5zdGFuY2UiLCJjaGFyQXQiLCJqcXVlcnkiLCJwdXNoU3RhY2siLCJnZXQiLCJlcnJvciIsIm9wdGlvbiIsIl9pbml0IiwiZGVmYXVsdEVsZW1lbnQiLCJjbGFzc2VzIiwiZGlzYWJsZWQiLCJjcmVhdGUiLCJ1dWlkIiwiZXZlbnROYW1lc3BhY2UiLCJiaW5kaW5ncyIsImhvdmVyYWJsZSIsImZvY3VzYWJsZSIsImNsYXNzZXNFbGVtZW50TG9va3VwIiwiX29uIiwiZXZlbnQiLCJkZXN0cm95IiwiZG9jdW1lbnQiLCJzdHlsZSIsIm93bmVyRG9jdW1lbnQiLCJ3aW5kb3ciLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIl9nZXRDcmVhdGVPcHRpb25zIiwiX2NyZWF0ZSIsIl9zZXRPcHRpb25EaXNhYmxlZCIsIl90cmlnZ2VyIiwiX2dldENyZWF0ZUV2ZW50RGF0YSIsIm5vb3AiLCJ0aGF0IiwiX2Rlc3Ryb3kiLCJfcmVtb3ZlQ2xhc3MiLCJvZmYiLCJyZW1vdmVEYXRhIiwicmVtb3ZlQXR0ciIsInBhcnRzIiwiY3VyT3B0aW9uIiwic2hpZnQiLCJwb3AiLCJfc2V0T3B0aW9ucyIsIl9zZXRPcHRpb24iLCJfc2V0T3B0aW9uQ2xhc3NlcyIsImNsYXNzS2V5IiwiZWxlbWVudHMiLCJjdXJyZW50RWxlbWVudHMiLCJhZGRDbGFzcyIsIl9jbGFzc2VzIiwia2V5cyIsImFkZCIsIl90b2dnbGVDbGFzcyIsImVuYWJsZSIsImRpc2FibGUiLCJmdWxsIiwicHJvY2Vzc0NsYXNzU3RyaW5nIiwiY2hlY2tPcHRpb24iLCJjdXJyZW50IiwidW5pcXVlIiwibm90IiwibWF0Y2giLCJleHRyYSIsImpvaW4iLCJfdW50cmFja0NsYXNzZXNFbGVtZW50IiwiaW5BcnJheSIsIl9hZGRDbGFzcyIsInRvZ2dsZUNsYXNzIiwic3VwcHJlc3NEaXNhYmxlZENoZWNrIiwiaGFuZGxlcnMiLCJkZWxlZ2F0ZUVsZW1lbnQiLCJoYW5kbGVyIiwiaGFuZGxlclByb3h5IiwiaGFzQ2xhc3MiLCJndWlkIiwiZXZlbnROYW1lIiwic2VsZWN0b3IiLCJvbiIsIl9vZmYiLCJfZGVsYXkiLCJkZWxheSIsInNldFRpbWVvdXQiLCJfaG92ZXJhYmxlIiwibW91c2VlbnRlciIsImN1cnJlbnRUYXJnZXQiLCJtb3VzZWxlYXZlIiwiX2ZvY3VzYWJsZSIsImZvY3VzaW4iLCJmb2N1c291dCIsInR5cGUiLCJjYWxsYmFjayIsIkV2ZW50Iiwib3JpZ2luYWxFdmVudCIsInRyaWdnZXIiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJzaG93IiwiaGlkZSIsIm1ldGhvZCIsImRlZmF1bHRFZmZlY3QiLCJoYXNPcHRpb25zIiwiZWZmZWN0IiwiZWZmZWN0TmFtZSIsImR1cmF0aW9uIiwiaXNFbXB0eU9iamVjdCIsImNvbXBsZXRlIiwiZWZmZWN0cyIsImVhc2luZyIsInF1ZXVlIiwibmV4dCIsInVpIiwiaWUiLCJleGVjIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibW91c2UiLCJhbmltYXRlIiwiZGlzdGFuY2UiLCJtYXgiLCJtaW4iLCJvcmllbnRhdGlvbiIsInJhbmdlIiwic3RlcCIsInZhbHVlcyIsImNoYW5nZSIsInNsaWRlIiwic3RhcnQiLCJzdG9wIiwibnVtUGFnZXMiLCJfa2V5U2xpZGluZyIsIl9tb3VzZVNsaWRpbmciLCJfYW5pbWF0ZU9mZiIsIl9oYW5kbGVJbmRleCIsIl9kZXRlY3RPcmllbnRhdGlvbiIsIl9tb3VzZUluaXQiLCJfY2FsY3VsYXRlTmV3TWF4IiwiX3JlZnJlc2giLCJfY3JlYXRlUmFuZ2UiLCJfY3JlYXRlSGFuZGxlcyIsIl9zZXR1cEV2ZW50cyIsIl9yZWZyZXNoVmFsdWUiLCJoYW5kbGVDb3VudCIsImV4aXN0aW5nSGFuZGxlcyIsImZpbmQiLCJoYW5kbGVzIiwiYXBwZW5kVG8iLCJoYW5kbGUiLCJlcSIsImF0dHIiLCJfdmFsdWVNaW4iLCJjc3MiLCJfaGFuZGxlRXZlbnRzIiwiX21vdXNlRGVzdHJveSIsIl9tb3VzZUNhcHR1cmUiLCJwb3NpdGlvbiIsIm5vcm1WYWx1ZSIsImNsb3Nlc3RIYW5kbGUiLCJpbmRleCIsIm9mZnNldCIsIm1vdXNlT3ZlckhhbmRsZSIsIm8iLCJlbGVtZW50U2l6ZSIsIndpZHRoIiwib3V0ZXJXaWR0aCIsImhlaWdodCIsIm91dGVySGVpZ2h0IiwiZWxlbWVudE9mZnNldCIsIngiLCJwYWdlWCIsInkiLCJwYWdlWSIsIl9ub3JtVmFsdWVGcm9tTW91c2UiLCJfdmFsdWVNYXgiLCJ0aGlzRGlzdGFuY2UiLCJNYXRoIiwiYWJzIiwiX2xhc3RDaGFuZ2VkVmFsdWUiLCJfc3RhcnQiLCJwYXJlbnRzIiwiYWRkQmFjayIsImlzIiwiX2NsaWNrT2Zmc2V0IiwibGVmdCIsInRvcCIsInBhcnNlSW50IiwiX3NsaWRlIiwiX21vdXNlU3RhcnQiLCJfbW91c2VEcmFnIiwiX21vdXNlU3RvcCIsIl9zdG9wIiwiX2NoYW5nZSIsInBpeGVsVG90YWwiLCJwaXhlbE1vdXNlIiwicGVyY2VudE1vdXNlIiwidmFsdWVUb3RhbCIsInZhbHVlTW91c2UiLCJfdHJpbUFsaWduVmFsdWUiLCJfdWlIYXNoIiwidWlIYXNoIiwiaGFuZGxlSW5kZXgiLCJfaGFzTXVsdGlwbGVWYWx1ZXMiLCJuZXdWYWwiLCJvdGhlclZhbCIsImN1cnJlbnRWYWx1ZSIsIm5ld1ZhbHVlcyIsIm5ld1ZhbHVlIiwiX3ZhbHVlIiwidmFscyIsIl92YWx1ZXMiLCJ2YWxzTGVuZ3RoIiwiX3JlZnJlc2hSYW5nZSIsInZhbCIsInZhbE1vZFN0ZXAiLCJhbGlnblZhbHVlIiwicGFyc2VGbG9hdCIsInRvRml4ZWQiLCJyb3VuZCIsIl9wcmVjaXNpb24iLCJwcmVjaXNpb24iLCJfcHJlY2lzaW9uT2YiLCJudW0iLCJzdHIiLCJ0b1N0cmluZyIsImRlY2ltYWwiLCJpbmRleE9mIiwibGFzdFZhbFBlcmNlbnQiLCJ2YWxQZXJjZW50IiwidmFsdWVNaW4iLCJ2YWx1ZU1heCIsIm9SYW5nZSIsIl9zZXQiLCJib3R0b20iLCJrZXlkb3duIiwiY3VyVmFsIiwia2V5Q29kZSIsIkhPTUUiLCJFTkQiLCJQQUdFX1VQIiwiUEFHRV9ET1dOIiwiVVAiLCJSSUdIVCIsIkRPV04iLCJMRUZUIiwicHJldmVudERlZmF1bHQiLCJrZXl1cCIsIm1vdXNlSGFuZGxlZCIsImNhbmNlbCIsIl9tb3VzZURvd24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzdGFydGVkIiwiX21vdXNlTW92ZURlbGVnYXRlIiwiX21vdXNlVXBEZWxlZ2F0ZSIsIl9tb3VzZU1vdmVkIiwiX21vdXNlU3RhcnRlZCIsIl9tb3VzZVVwIiwiX21vdXNlRG93bkV2ZW50IiwiYnRuSXNMZWZ0Iiwid2hpY2giLCJlbElzQ2FuY2VsIiwibm9kZU5hbWUiLCJjbG9zZXN0IiwibW91c2VEZWxheU1ldCIsIl9tb3VzZURlbGF5VGltZXIiLCJfbW91c2VEaXN0YW5jZU1ldCIsIl9tb3VzZURlbGF5TWV0IiwiX21vdXNlTW92ZSIsImRvY3VtZW50TW9kZSIsImJ1dHRvbiIsImFsdEtleSIsImN0cmxLZXkiLCJtZXRhS2V5Iiwic2hpZnRLZXkiLCJpZ25vcmVNaXNzaW5nV2hpY2giLCJjbGVhclRpbWVvdXQiLCJCQUNLU1BBQ0UiLCJDT01NQSIsIkRFTEVURSIsIkVOVEVSIiwiRVNDQVBFIiwiUEVSSU9EIiwiU1BBQ0UiLCJUQUIiXSwibWFwcGluZ3MiOiI7K0VBQUEsVUFtQkUsRUFBUSxDQUFFLFVBQVUsZ0JBQXNCLDBCQUFQLEVBTWxDLFNBQVVBLEdBRWIsSUFHMEJDLEVBSHRCQyxFQUFhLEVBQ2JDLEVBQWNDLE1BQU1DLFVBQVVDLE1BOHJCbEMsT0E1ckJBTixF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RXVMLEdBQUc0SCxRQUFVLENBQ3JCd0MsVUFBVyxFQUNYQyxNQUFPLElBQ1BDLE9BQVEsR0FDUm5DLEtBQU0sR0FDTkwsSUFBSyxHQUNMeUMsTUFBTyxHQUNQQyxPQUFRLEdBQ1IzQyxLQUFNLEdBQ05PLEtBQU0sR0FDTkosVUFBVyxHQUNYRCxRQUFTLEdBQ1QwQyxPQUFRLElBQ1J2QyxNQUFPLEdBQ1B3QyxNQUFPLEdBQ1BDLElBQUssRUFDTDFDLEdBQUksTUF2QnVDIiwiZmlsZSI6Im5wbS5qcXVlcnktdWkuZTQ0N2RhNDg4NmE0MTI2MTFlMWIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGpRdWVyeSBVSSBXaWRnZXQgMS4xMi4xXG4gKiBodHRwOi8vanF1ZXJ5dWkuY29tXG4gKlxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqL1xuXG4vLz4+bGFiZWw6IFdpZGdldFxuLy8+Pmdyb3VwOiBDb3JlXG4vLz4+ZGVzY3JpcHRpb246IFByb3ZpZGVzIGEgZmFjdG9yeSBmb3IgY3JlYXRpbmcgc3RhdGVmdWwgd2lkZ2V0cyB3aXRoIGEgY29tbW9uIEFQSS5cbi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9qUXVlcnkud2lkZ2V0L1xuLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL3dpZGdldC9cblxuKCBmdW5jdGlvbiggZmFjdG9yeSApIHtcblx0aWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblxuXHRcdC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cblx0XHRkZWZpbmUoIFsgXCJqcXVlcnlcIiwgXCIuL3ZlcnNpb25cIiBdLCBmYWN0b3J5ICk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBCcm93c2VyIGdsb2JhbHNcblx0XHRmYWN0b3J5KCBqUXVlcnkgKTtcblx0fVxufSggZnVuY3Rpb24oICQgKSB7XG5cbnZhciB3aWRnZXRVdWlkID0gMDtcbnZhciB3aWRnZXRTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcblxuJC5jbGVhbkRhdGEgPSAoIGZ1bmN0aW9uKCBvcmlnICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW1zICkge1xuXHRcdHZhciBldmVudHMsIGVsZW0sIGk7XG5cdFx0Zm9yICggaSA9IDA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHR0cnkge1xuXG5cdFx0XHRcdC8vIE9ubHkgdHJpZ2dlciByZW1vdmUgd2hlbiBuZWNlc3NhcnkgdG8gc2F2ZSB0aW1lXG5cdFx0XHRcdGV2ZW50cyA9ICQuX2RhdGEoIGVsZW0sIFwiZXZlbnRzXCIgKTtcblx0XHRcdFx0aWYgKCBldmVudHMgJiYgZXZlbnRzLnJlbW92ZSApIHtcblx0XHRcdFx0XHQkKCBlbGVtICkudHJpZ2dlckhhbmRsZXIoIFwicmVtb3ZlXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBIdHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC84MjM1XG5cdFx0XHR9IGNhdGNoICggZSApIHt9XG5cdFx0fVxuXHRcdG9yaWcoIGVsZW1zICk7XG5cdH07XG59ICkoICQuY2xlYW5EYXRhICk7XG5cbiQud2lkZ2V0ID0gZnVuY3Rpb24oIG5hbWUsIGJhc2UsIHByb3RvdHlwZSApIHtcblx0dmFyIGV4aXN0aW5nQ29uc3RydWN0b3IsIGNvbnN0cnVjdG9yLCBiYXNlUHJvdG90eXBlO1xuXG5cdC8vIFByb3hpZWRQcm90b3R5cGUgYWxsb3dzIHRoZSBwcm92aWRlZCBwcm90b3R5cGUgdG8gcmVtYWluIHVubW9kaWZpZWRcblx0Ly8gc28gdGhhdCBpdCBjYW4gYmUgdXNlZCBhcyBhIG1peGluIGZvciBtdWx0aXBsZSB3aWRnZXRzICgjODg3Nilcblx0dmFyIHByb3hpZWRQcm90b3R5cGUgPSB7fTtcblxuXHR2YXIgbmFtZXNwYWNlID0gbmFtZS5zcGxpdCggXCIuXCIgKVsgMCBdO1xuXHRuYW1lID0gbmFtZS5zcGxpdCggXCIuXCIgKVsgMSBdO1xuXHR2YXIgZnVsbE5hbWUgPSBuYW1lc3BhY2UgKyBcIi1cIiArIG5hbWU7XG5cblx0aWYgKCAhcHJvdG90eXBlICkge1xuXHRcdHByb3RvdHlwZSA9IGJhc2U7XG5cdFx0YmFzZSA9ICQuV2lkZ2V0O1xuXHR9XG5cblx0aWYgKCAkLmlzQXJyYXkoIHByb3RvdHlwZSApICkge1xuXHRcdHByb3RvdHlwZSA9ICQuZXh0ZW5kLmFwcGx5KCBudWxsLCBbIHt9IF0uY29uY2F0KCBwcm90b3R5cGUgKSApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIHNlbGVjdG9yIGZvciBwbHVnaW5cblx0JC5leHByWyBcIjpcIiBdWyBmdWxsTmFtZS50b0xvd2VyQ2FzZSgpIF0gPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gISEkLmRhdGEoIGVsZW0sIGZ1bGxOYW1lICk7XG5cdH07XG5cblx0JFsgbmFtZXNwYWNlIF0gPSAkWyBuYW1lc3BhY2UgXSB8fCB7fTtcblx0ZXhpc3RpbmdDb25zdHJ1Y3RvciA9ICRbIG5hbWVzcGFjZSBdWyBuYW1lIF07XG5cdGNvbnN0cnVjdG9yID0gJFsgbmFtZXNwYWNlIF1bIG5hbWUgXSA9IGZ1bmN0aW9uKCBvcHRpb25zLCBlbGVtZW50ICkge1xuXG5cdFx0Ly8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IFwibmV3XCIga2V5d29yZFxuXHRcdGlmICggIXRoaXMuX2NyZWF0ZVdpZGdldCApIHtcblx0XHRcdHJldHVybiBuZXcgY29uc3RydWN0b3IoIG9wdGlvbnMsIGVsZW1lbnQgKTtcblx0XHR9XG5cblx0XHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgaW5pdGlhbGl6aW5nIGZvciBzaW1wbGUgaW5oZXJpdGFuY2Vcblx0XHQvLyBtdXN0IHVzZSBcIm5ld1wiIGtleXdvcmQgKHRoZSBjb2RlIGFib3ZlIGFsd2F5cyBwYXNzZXMgYXJncylcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHR0aGlzLl9jcmVhdGVXaWRnZXQoIG9wdGlvbnMsIGVsZW1lbnQgKTtcblx0XHR9XG5cdH07XG5cblx0Ly8gRXh0ZW5kIHdpdGggdGhlIGV4aXN0aW5nIGNvbnN0cnVjdG9yIHRvIGNhcnJ5IG92ZXIgYW55IHN0YXRpYyBwcm9wZXJ0aWVzXG5cdCQuZXh0ZW5kKCBjb25zdHJ1Y3RvciwgZXhpc3RpbmdDb25zdHJ1Y3Rvciwge1xuXHRcdHZlcnNpb246IHByb3RvdHlwZS52ZXJzaW9uLFxuXG5cdFx0Ly8gQ29weSB0aGUgb2JqZWN0IHVzZWQgdG8gY3JlYXRlIHRoZSBwcm90b3R5cGUgaW4gY2FzZSB3ZSBuZWVkIHRvXG5cdFx0Ly8gcmVkZWZpbmUgdGhlIHdpZGdldCBsYXRlclxuXHRcdF9wcm90bzogJC5leHRlbmQoIHt9LCBwcm90b3R5cGUgKSxcblxuXHRcdC8vIFRyYWNrIHdpZGdldHMgdGhhdCBpbmhlcml0IGZyb20gdGhpcyB3aWRnZXQgaW4gY2FzZSB0aGlzIHdpZGdldCBpc1xuXHRcdC8vIHJlZGVmaW5lZCBhZnRlciBhIHdpZGdldCBpbmhlcml0cyBmcm9tIGl0XG5cdFx0X2NoaWxkQ29uc3RydWN0b3JzOiBbXVxuXHR9ICk7XG5cblx0YmFzZVByb3RvdHlwZSA9IG5ldyBiYXNlKCk7XG5cblx0Ly8gV2UgbmVlZCB0byBtYWtlIHRoZSBvcHRpb25zIGhhc2ggYSBwcm9wZXJ0eSBkaXJlY3RseSBvbiB0aGUgbmV3IGluc3RhbmNlXG5cdC8vIG90aGVyd2lzZSB3ZSdsbCBtb2RpZnkgdGhlIG9wdGlvbnMgaGFzaCBvbiB0aGUgcHJvdG90eXBlIHRoYXQgd2UncmVcblx0Ly8gaW5oZXJpdGluZyBmcm9tXG5cdGJhc2VQcm90b3R5cGUub3B0aW9ucyA9ICQud2lkZ2V0LmV4dGVuZCgge30sIGJhc2VQcm90b3R5cGUub3B0aW9ucyApO1xuXHQkLmVhY2goIHByb3RvdHlwZSwgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkge1xuXHRcdGlmICggISQuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHByb3hpZWRQcm90b3R5cGVbIHByb3AgXSA9IHZhbHVlO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRwcm94aWVkUHJvdG90eXBlWyBwcm9wIF0gPSAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZnVuY3Rpb24gX3N1cGVyKCkge1xuXHRcdFx0XHRyZXR1cm4gYmFzZS5wcm90b3R5cGVbIHByb3AgXS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHR9XG5cblx0XHRcdGZ1bmN0aW9uIF9zdXBlckFwcGx5KCBhcmdzICkge1xuXHRcdFx0XHRyZXR1cm4gYmFzZS5wcm90b3R5cGVbIHByb3AgXS5hcHBseSggdGhpcywgYXJncyApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBfX3N1cGVyID0gdGhpcy5fc3VwZXI7XG5cdFx0XHRcdHZhciBfX3N1cGVyQXBwbHkgPSB0aGlzLl9zdXBlckFwcGx5O1xuXHRcdFx0XHR2YXIgcmV0dXJuVmFsdWU7XG5cblx0XHRcdFx0dGhpcy5fc3VwZXIgPSBfc3VwZXI7XG5cdFx0XHRcdHRoaXMuX3N1cGVyQXBwbHkgPSBfc3VwZXJBcHBseTtcblxuXHRcdFx0XHRyZXR1cm5WYWx1ZSA9IHZhbHVlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHR0aGlzLl9zdXBlciA9IF9fc3VwZXI7XG5cdFx0XHRcdHRoaXMuX3N1cGVyQXBwbHkgPSBfX3N1cGVyQXBwbHk7XG5cblx0XHRcdFx0cmV0dXJuIHJldHVyblZhbHVlO1xuXHRcdFx0fTtcblx0XHR9ICkoKTtcblx0fSApO1xuXHRjb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSAkLndpZGdldC5leHRlbmQoIGJhc2VQcm90b3R5cGUsIHtcblxuXHRcdC8vIFRPRE86IHJlbW92ZSBzdXBwb3J0IGZvciB3aWRnZXRFdmVudFByZWZpeFxuXHRcdC8vIGFsd2F5cyB1c2UgdGhlIG5hbWUgKyBhIGNvbG9uIGFzIHRoZSBwcmVmaXgsIGUuZy4sIGRyYWdnYWJsZTpzdGFydFxuXHRcdC8vIGRvbid0IHByZWZpeCBmb3Igd2lkZ2V0cyB0aGF0IGFyZW4ndCBET00tYmFzZWRcblx0XHR3aWRnZXRFdmVudFByZWZpeDogZXhpc3RpbmdDb25zdHJ1Y3RvciA/ICggYmFzZVByb3RvdHlwZS53aWRnZXRFdmVudFByZWZpeCB8fCBuYW1lICkgOiBuYW1lXG5cdH0sIHByb3hpZWRQcm90b3R5cGUsIHtcblx0XHRjb25zdHJ1Y3RvcjogY29uc3RydWN0b3IsXG5cdFx0bmFtZXNwYWNlOiBuYW1lc3BhY2UsXG5cdFx0d2lkZ2V0TmFtZTogbmFtZSxcblx0XHR3aWRnZXRGdWxsTmFtZTogZnVsbE5hbWVcblx0fSApO1xuXG5cdC8vIElmIHRoaXMgd2lkZ2V0IGlzIGJlaW5nIHJlZGVmaW5lZCB0aGVuIHdlIG5lZWQgdG8gZmluZCBhbGwgd2lkZ2V0cyB0aGF0XG5cdC8vIGFyZSBpbmhlcml0aW5nIGZyb20gaXQgYW5kIHJlZGVmaW5lIGFsbCBvZiB0aGVtIHNvIHRoYXQgdGhleSBpbmhlcml0IGZyb21cblx0Ly8gdGhlIG5ldyB2ZXJzaW9uIG9mIHRoaXMgd2lkZ2V0LiBXZSdyZSBlc3NlbnRpYWxseSB0cnlpbmcgdG8gcmVwbGFjZSBvbmVcblx0Ly8gbGV2ZWwgaW4gdGhlIHByb3RvdHlwZSBjaGFpbi5cblx0aWYgKCBleGlzdGluZ0NvbnN0cnVjdG9yICkge1xuXHRcdCQuZWFjaCggZXhpc3RpbmdDb25zdHJ1Y3Rvci5fY2hpbGRDb25zdHJ1Y3RvcnMsIGZ1bmN0aW9uKCBpLCBjaGlsZCApIHtcblx0XHRcdHZhciBjaGlsZFByb3RvdHlwZSA9IGNoaWxkLnByb3RvdHlwZTtcblxuXHRcdFx0Ly8gUmVkZWZpbmUgdGhlIGNoaWxkIHdpZGdldCB1c2luZyB0aGUgc2FtZSBwcm90b3R5cGUgdGhhdCB3YXNcblx0XHRcdC8vIG9yaWdpbmFsbHkgdXNlZCwgYnV0IGluaGVyaXQgZnJvbSB0aGUgbmV3IHZlcnNpb24gb2YgdGhlIGJhc2Vcblx0XHRcdCQud2lkZ2V0KCBjaGlsZFByb3RvdHlwZS5uYW1lc3BhY2UgKyBcIi5cIiArIGNoaWxkUHJvdG90eXBlLndpZGdldE5hbWUsIGNvbnN0cnVjdG9yLFxuXHRcdFx0XHRjaGlsZC5fcHJvdG8gKTtcblx0XHR9ICk7XG5cblx0XHQvLyBSZW1vdmUgdGhlIGxpc3Qgb2YgZXhpc3RpbmcgY2hpbGQgY29uc3RydWN0b3JzIGZyb20gdGhlIG9sZCBjb25zdHJ1Y3RvclxuXHRcdC8vIHNvIHRoZSBvbGQgY2hpbGQgY29uc3RydWN0b3JzIGNhbiBiZSBnYXJiYWdlIGNvbGxlY3RlZFxuXHRcdGRlbGV0ZSBleGlzdGluZ0NvbnN0cnVjdG9yLl9jaGlsZENvbnN0cnVjdG9ycztcblx0fSBlbHNlIHtcblx0XHRiYXNlLl9jaGlsZENvbnN0cnVjdG9ycy5wdXNoKCBjb25zdHJ1Y3RvciApO1xuXHR9XG5cblx0JC53aWRnZXQuYnJpZGdlKCBuYW1lLCBjb25zdHJ1Y3RvciApO1xuXG5cdHJldHVybiBjb25zdHJ1Y3Rvcjtcbn07XG5cbiQud2lkZ2V0LmV4dGVuZCA9IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdHZhciBpbnB1dCA9IHdpZGdldFNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMSApO1xuXHR2YXIgaW5wdXRJbmRleCA9IDA7XG5cdHZhciBpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aDtcblx0dmFyIGtleTtcblx0dmFyIHZhbHVlO1xuXG5cdGZvciAoIDsgaW5wdXRJbmRleCA8IGlucHV0TGVuZ3RoOyBpbnB1dEluZGV4KysgKSB7XG5cdFx0Zm9yICgga2V5IGluIGlucHV0WyBpbnB1dEluZGV4IF0gKSB7XG5cdFx0XHR2YWx1ZSA9IGlucHV0WyBpbnB1dEluZGV4IF1bIGtleSBdO1xuXHRcdFx0aWYgKCBpbnB1dFsgaW5wdXRJbmRleCBdLmhhc093blByb3BlcnR5KCBrZXkgKSAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdC8vIENsb25lIG9iamVjdHNcblx0XHRcdFx0aWYgKCAkLmlzUGxhaW5PYmplY3QoIHZhbHVlICkgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0WyBrZXkgXSA9ICQuaXNQbGFpbk9iamVjdCggdGFyZ2V0WyBrZXkgXSApID9cblx0XHRcdFx0XHRcdCQud2lkZ2V0LmV4dGVuZCgge30sIHRhcmdldFsga2V5IF0sIHZhbHVlICkgOlxuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBleHRlbmQgc3RyaW5ncywgYXJyYXlzLCBldGMuIHdpdGggb2JqZWN0c1xuXHRcdFx0XHRcdFx0JC53aWRnZXQuZXh0ZW5kKCB7fSwgdmFsdWUgKTtcblxuXHRcdFx0XHQvLyBDb3B5IGV2ZXJ5dGhpbmcgZWxzZSBieSByZWZlcmVuY2Vcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0YXJnZXRbIGtleSBdID0gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbiQud2lkZ2V0LmJyaWRnZSA9IGZ1bmN0aW9uKCBuYW1lLCBvYmplY3QgKSB7XG5cdHZhciBmdWxsTmFtZSA9IG9iamVjdC5wcm90b3R5cGUud2lkZ2V0RnVsbE5hbWUgfHwgbmFtZTtcblx0JC5mblsgbmFtZSBdID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdFx0dmFyIGlzTWV0aG9kQ2FsbCA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiO1xuXHRcdHZhciBhcmdzID0gd2lkZ2V0U2xpY2UuY2FsbCggYXJndW1lbnRzLCAxICk7XG5cdFx0dmFyIHJldHVyblZhbHVlID0gdGhpcztcblxuXHRcdGlmICggaXNNZXRob2RDYWxsICkge1xuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGVtcHR5IGNvbGxlY3Rpb24sIHdlIG5lZWQgdG8gaGF2ZSB0aGUgaW5zdGFuY2UgbWV0aG9kXG5cdFx0XHQvLyByZXR1cm4gdW5kZWZpbmVkIGluc3RlYWQgb2YgdGhlIGpRdWVyeSBpbnN0YW5jZVxuXHRcdFx0aWYgKCAhdGhpcy5sZW5ndGggJiYgb3B0aW9ucyA9PT0gXCJpbnN0YW5jZVwiICkge1xuXHRcdFx0XHRyZXR1cm5WYWx1ZSA9IHVuZGVmaW5lZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dmFyIG1ldGhvZFZhbHVlO1xuXHRcdFx0XHRcdHZhciBpbnN0YW5jZSA9ICQuZGF0YSggdGhpcywgZnVsbE5hbWUgKTtcblxuXHRcdFx0XHRcdGlmICggb3B0aW9ucyA9PT0gXCJpbnN0YW5jZVwiICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuVmFsdWUgPSBpbnN0YW5jZTtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoICFpbnN0YW5jZSApIHtcblx0XHRcdFx0XHRcdHJldHVybiAkLmVycm9yKCBcImNhbm5vdCBjYWxsIG1ldGhvZHMgb24gXCIgKyBuYW1lICtcblx0XHRcdFx0XHRcdFx0XCIgcHJpb3IgdG8gaW5pdGlhbGl6YXRpb247IFwiICtcblx0XHRcdFx0XHRcdFx0XCJhdHRlbXB0ZWQgdG8gY2FsbCBtZXRob2QgJ1wiICsgb3B0aW9ucyArIFwiJ1wiICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKCAhJC5pc0Z1bmN0aW9uKCBpbnN0YW5jZVsgb3B0aW9ucyBdICkgfHwgb3B0aW9ucy5jaGFyQXQoIDAgKSA9PT0gXCJfXCIgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gJC5lcnJvciggXCJubyBzdWNoIG1ldGhvZCAnXCIgKyBvcHRpb25zICsgXCInIGZvciBcIiArIG5hbWUgK1xuXHRcdFx0XHRcdFx0XHRcIiB3aWRnZXQgaW5zdGFuY2VcIiApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdG1ldGhvZFZhbHVlID0gaW5zdGFuY2VbIG9wdGlvbnMgXS5hcHBseSggaW5zdGFuY2UsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdGlmICggbWV0aG9kVmFsdWUgIT09IGluc3RhbmNlICYmIG1ldGhvZFZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm5WYWx1ZSA9IG1ldGhvZFZhbHVlICYmIG1ldGhvZFZhbHVlLmpxdWVyeSA/XG5cdFx0XHRcdFx0XHRcdHJldHVyblZhbHVlLnB1c2hTdGFjayggbWV0aG9kVmFsdWUuZ2V0KCkgKSA6XG5cdFx0XHRcdFx0XHRcdG1ldGhvZFZhbHVlO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIEFsbG93IG11bHRpcGxlIGhhc2hlcyB0byBiZSBwYXNzZWQgb24gaW5pdFxuXHRcdFx0aWYgKCBhcmdzLmxlbmd0aCApIHtcblx0XHRcdFx0b3B0aW9ucyA9ICQud2lkZ2V0LmV4dGVuZC5hcHBseSggbnVsbCwgWyBvcHRpb25zIF0uY29uY2F0KCBhcmdzICkgKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGluc3RhbmNlID0gJC5kYXRhKCB0aGlzLCBmdWxsTmFtZSApO1xuXHRcdFx0XHRpZiAoIGluc3RhbmNlICkge1xuXHRcdFx0XHRcdGluc3RhbmNlLm9wdGlvbiggb3B0aW9ucyB8fCB7fSApO1xuXHRcdFx0XHRcdGlmICggaW5zdGFuY2UuX2luaXQgKSB7XG5cdFx0XHRcdFx0XHRpbnN0YW5jZS5faW5pdCgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQkLmRhdGEoIHRoaXMsIGZ1bGxOYW1lLCBuZXcgb2JqZWN0KCBvcHRpb25zLCB0aGlzICkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiByZXR1cm5WYWx1ZTtcblx0fTtcbn07XG5cbiQuV2lkZ2V0ID0gZnVuY3Rpb24oIC8qIG9wdGlvbnMsIGVsZW1lbnQgKi8gKSB7fTtcbiQuV2lkZ2V0Ll9jaGlsZENvbnN0cnVjdG9ycyA9IFtdO1xuXG4kLldpZGdldC5wcm90b3R5cGUgPSB7XG5cdHdpZGdldE5hbWU6IFwid2lkZ2V0XCIsXG5cdHdpZGdldEV2ZW50UHJlZml4OiBcIlwiLFxuXHRkZWZhdWx0RWxlbWVudDogXCI8ZGl2PlwiLFxuXG5cdG9wdGlvbnM6IHtcblx0XHRjbGFzc2VzOiB7fSxcblx0XHRkaXNhYmxlZDogZmFsc2UsXG5cblx0XHQvLyBDYWxsYmFja3Ncblx0XHRjcmVhdGU6IG51bGxcblx0fSxcblxuXHRfY3JlYXRlV2lkZ2V0OiBmdW5jdGlvbiggb3B0aW9ucywgZWxlbWVudCApIHtcblx0XHRlbGVtZW50ID0gJCggZWxlbWVudCB8fCB0aGlzLmRlZmF1bHRFbGVtZW50IHx8IHRoaXMgKVsgMCBdO1xuXHRcdHRoaXMuZWxlbWVudCA9ICQoIGVsZW1lbnQgKTtcblx0XHR0aGlzLnV1aWQgPSB3aWRnZXRVdWlkKys7XG5cdFx0dGhpcy5ldmVudE5hbWVzcGFjZSA9IFwiLlwiICsgdGhpcy53aWRnZXROYW1lICsgdGhpcy51dWlkO1xuXG5cdFx0dGhpcy5iaW5kaW5ncyA9ICQoKTtcblx0XHR0aGlzLmhvdmVyYWJsZSA9ICQoKTtcblx0XHR0aGlzLmZvY3VzYWJsZSA9ICQoKTtcblx0XHR0aGlzLmNsYXNzZXNFbGVtZW50TG9va3VwID0ge307XG5cblx0XHRpZiAoIGVsZW1lbnQgIT09IHRoaXMgKSB7XG5cdFx0XHQkLmRhdGEoIGVsZW1lbnQsIHRoaXMud2lkZ2V0RnVsbE5hbWUsIHRoaXMgKTtcblx0XHRcdHRoaXMuX29uKCB0cnVlLCB0aGlzLmVsZW1lbnQsIHtcblx0XHRcdFx0cmVtb3ZlOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdFx0aWYgKCBldmVudC50YXJnZXQgPT09IGVsZW1lbnQgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLmRlc3Ryb3koKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHRcdHRoaXMuZG9jdW1lbnQgPSAkKCBlbGVtZW50LnN0eWxlID9cblxuXHRcdFx0XHQvLyBFbGVtZW50IHdpdGhpbiB0aGUgZG9jdW1lbnRcblx0XHRcdFx0ZWxlbWVudC5vd25lckRvY3VtZW50IDpcblxuXHRcdFx0XHQvLyBFbGVtZW50IGlzIHdpbmRvdyBvciBkb2N1bWVudFxuXHRcdFx0XHRlbGVtZW50LmRvY3VtZW50IHx8IGVsZW1lbnQgKTtcblx0XHRcdHRoaXMud2luZG93ID0gJCggdGhpcy5kb2N1bWVudFsgMCBdLmRlZmF1bHRWaWV3IHx8IHRoaXMuZG9jdW1lbnRbIDAgXS5wYXJlbnRXaW5kb3cgKTtcblx0XHR9XG5cblx0XHR0aGlzLm9wdGlvbnMgPSAkLndpZGdldC5leHRlbmQoIHt9LFxuXHRcdFx0dGhpcy5vcHRpb25zLFxuXHRcdFx0dGhpcy5fZ2V0Q3JlYXRlT3B0aW9ucygpLFxuXHRcdFx0b3B0aW9ucyApO1xuXG5cdFx0dGhpcy5fY3JlYXRlKCk7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApIHtcblx0XHRcdHRoaXMuX3NldE9wdGlvbkRpc2FibGVkKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKTtcblx0XHR9XG5cblx0XHR0aGlzLl90cmlnZ2VyKCBcImNyZWF0ZVwiLCBudWxsLCB0aGlzLl9nZXRDcmVhdGVFdmVudERhdGEoKSApO1xuXHRcdHRoaXMuX2luaXQoKTtcblx0fSxcblxuXHRfZ2V0Q3JlYXRlT3B0aW9uczogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHt9O1xuXHR9LFxuXG5cdF9nZXRDcmVhdGVFdmVudERhdGE6ICQubm9vcCxcblxuXHRfY3JlYXRlOiAkLm5vb3AsXG5cblx0X2luaXQ6ICQubm9vcCxcblxuXHRkZXN0cm95OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXM7XG5cblx0XHR0aGlzLl9kZXN0cm95KCk7XG5cdFx0JC5lYWNoKCB0aGlzLmNsYXNzZXNFbGVtZW50TG9va3VwLCBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHRcdHRoYXQuX3JlbW92ZUNsYXNzKCB2YWx1ZSwga2V5ICk7XG5cdFx0fSApO1xuXG5cdFx0Ly8gV2UgY2FuIHByb2JhYmx5IHJlbW92ZSB0aGUgdW5iaW5kIGNhbGxzIGluIDIuMFxuXHRcdC8vIGFsbCBldmVudCBiaW5kaW5ncyBzaG91bGQgZ28gdGhyb3VnaCB0aGlzLl9vbigpXG5cdFx0dGhpcy5lbGVtZW50XG5cdFx0XHQub2ZmKCB0aGlzLmV2ZW50TmFtZXNwYWNlIClcblx0XHRcdC5yZW1vdmVEYXRhKCB0aGlzLndpZGdldEZ1bGxOYW1lICk7XG5cdFx0dGhpcy53aWRnZXQoKVxuXHRcdFx0Lm9mZiggdGhpcy5ldmVudE5hbWVzcGFjZSApXG5cdFx0XHQucmVtb3ZlQXR0ciggXCJhcmlhLWRpc2FibGVkXCIgKTtcblxuXHRcdC8vIENsZWFuIHVwIGV2ZW50cyBhbmQgc3RhdGVzXG5cdFx0dGhpcy5iaW5kaW5ncy5vZmYoIHRoaXMuZXZlbnROYW1lc3BhY2UgKTtcblx0fSxcblxuXHRfZGVzdHJveTogJC5ub29wLFxuXG5cdHdpZGdldDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWxlbWVudDtcblx0fSxcblxuXHRvcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkge1xuXHRcdHZhciBvcHRpb25zID0ga2V5O1xuXHRcdHZhciBwYXJ0cztcblx0XHR2YXIgY3VyT3B0aW9uO1xuXHRcdHZhciBpO1xuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoID09PSAwICkge1xuXG5cdFx0XHQvLyBEb24ndCByZXR1cm4gYSByZWZlcmVuY2UgdG8gdGhlIGludGVybmFsIGhhc2hcblx0XHRcdHJldHVybiAkLndpZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnMgKTtcblx0XHR9XG5cblx0XHRpZiAoIHR5cGVvZiBrZXkgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vIEhhbmRsZSBuZXN0ZWQga2V5cywgZS5nLiwgXCJmb28uYmFyXCIgPT4geyBmb286IHsgYmFyOiBfX18gfSB9XG5cdFx0XHRvcHRpb25zID0ge307XG5cdFx0XHRwYXJ0cyA9IGtleS5zcGxpdCggXCIuXCIgKTtcblx0XHRcdGtleSA9IHBhcnRzLnNoaWZ0KCk7XG5cdFx0XHRpZiAoIHBhcnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y3VyT3B0aW9uID0gb3B0aW9uc1sga2V5IF0gPSAkLndpZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnNbIGtleSBdICk7XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoIC0gMTsgaSsrICkge1xuXHRcdFx0XHRcdGN1ck9wdGlvblsgcGFydHNbIGkgXSBdID0gY3VyT3B0aW9uWyBwYXJ0c1sgaSBdIF0gfHwge307XG5cdFx0XHRcdFx0Y3VyT3B0aW9uID0gY3VyT3B0aW9uWyBwYXJ0c1sgaSBdIF07XG5cdFx0XHRcdH1cblx0XHRcdFx0a2V5ID0gcGFydHMucG9wKCk7XG5cdFx0XHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdFx0XHRyZXR1cm4gY3VyT3B0aW9uWyBrZXkgXSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGN1ck9wdGlvblsga2V5IF07XG5cdFx0XHRcdH1cblx0XHRcdFx0Y3VyT3B0aW9uWyBrZXkgXSA9IHZhbHVlO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzLm9wdGlvbnNbIGtleSBdID09PSB1bmRlZmluZWQgPyBudWxsIDogdGhpcy5vcHRpb25zWyBrZXkgXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRvcHRpb25zWyBrZXkgXSA9IHZhbHVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoaXMuX3NldE9wdGlvbnMoIG9wdGlvbnMgKTtcblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdF9zZXRPcHRpb25zOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHR2YXIga2V5O1xuXG5cdFx0Zm9yICgga2V5IGluIG9wdGlvbnMgKSB7XG5cdFx0XHR0aGlzLl9zZXRPcHRpb24oIGtleSwgb3B0aW9uc1sga2V5IF0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHRpZiAoIGtleSA9PT0gXCJjbGFzc2VzXCIgKSB7XG5cdFx0XHR0aGlzLl9zZXRPcHRpb25DbGFzc2VzKCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdHRoaXMub3B0aW9uc1sga2V5IF0gPSB2YWx1ZTtcblxuXHRcdGlmICgga2V5ID09PSBcImRpc2FibGVkXCIgKSB7XG5cdFx0XHR0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCggdmFsdWUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRfc2V0T3B0aW9uQ2xhc3NlczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc0tleSwgZWxlbWVudHMsIGN1cnJlbnRFbGVtZW50cztcblxuXHRcdGZvciAoIGNsYXNzS2V5IGluIHZhbHVlICkge1xuXHRcdFx0Y3VycmVudEVsZW1lbnRzID0gdGhpcy5jbGFzc2VzRWxlbWVudExvb2t1cFsgY2xhc3NLZXkgXTtcblx0XHRcdGlmICggdmFsdWVbIGNsYXNzS2V5IF0gPT09IHRoaXMub3B0aW9ucy5jbGFzc2VzWyBjbGFzc0tleSBdIHx8XG5cdFx0XHRcdFx0IWN1cnJlbnRFbGVtZW50cyB8fFxuXHRcdFx0XHRcdCFjdXJyZW50RWxlbWVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2UgYXJlIGRvaW5nIHRoaXMgdG8gY3JlYXRlIGEgbmV3IGpRdWVyeSBvYmplY3QgYmVjYXVzZSB0aGUgX3JlbW92ZUNsYXNzKCkgY2FsbFxuXHRcdFx0Ly8gb24gdGhlIG5leHQgbGluZSBpcyBnb2luZyB0byBkZXN0cm95IHRoZSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgZWxlbWVudHMgYmVpbmdcblx0XHRcdC8vIHRyYWNrZWQuIFdlIG5lZWQgdG8gc2F2ZSBhIGNvcHkgb2YgdGhpcyBjb2xsZWN0aW9uIHNvIHRoYXQgd2UgY2FuIGFkZCB0aGUgbmV3IGNsYXNzZXNcblx0XHRcdC8vIGJlbG93LlxuXHRcdFx0ZWxlbWVudHMgPSAkKCBjdXJyZW50RWxlbWVudHMuZ2V0KCkgKTtcblx0XHRcdHRoaXMuX3JlbW92ZUNsYXNzKCBjdXJyZW50RWxlbWVudHMsIGNsYXNzS2V5ICk7XG5cblx0XHRcdC8vIFdlIGRvbid0IHVzZSBfYWRkQ2xhc3MoKSBoZXJlLCBiZWNhdXNlIHRoYXQgdXNlcyB0aGlzLm9wdGlvbnMuY2xhc3Nlc1xuXHRcdFx0Ly8gZm9yIGdlbmVyYXRpbmcgdGhlIHN0cmluZyBvZiBjbGFzc2VzLiBXZSB3YW50IHRvIHVzZSB0aGUgdmFsdWUgcGFzc2VkIGluIGZyb21cblx0XHRcdC8vIF9zZXRPcHRpb24oKSwgdGhpcyBpcyB0aGUgbmV3IHZhbHVlIG9mIHRoZSBjbGFzc2VzIG9wdGlvbiB3aGljaCB3YXMgcGFzc2VkIHRvXG5cdFx0XHQvLyBfc2V0T3B0aW9uKCkuIFdlIHBhc3MgdGhpcyB2YWx1ZSBkaXJlY3RseSB0byBfY2xhc3NlcygpLlxuXHRcdFx0ZWxlbWVudHMuYWRkQ2xhc3MoIHRoaXMuX2NsYXNzZXMoIHtcblx0XHRcdFx0ZWxlbWVudDogZWxlbWVudHMsXG5cdFx0XHRcdGtleXM6IGNsYXNzS2V5LFxuXHRcdFx0XHRjbGFzc2VzOiB2YWx1ZSxcblx0XHRcdFx0YWRkOiB0cnVlXG5cdFx0XHR9ICkgKTtcblx0XHR9XG5cdH0sXG5cblx0X3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMud2lkZ2V0KCksIHRoaXMud2lkZ2V0RnVsbE5hbWUgKyBcIi1kaXNhYmxlZFwiLCBudWxsLCAhIXZhbHVlICk7XG5cblx0XHQvLyBJZiB0aGUgd2lkZ2V0IGlzIGJlY29taW5nIGRpc2FibGVkLCB0aGVuIG5vdGhpbmcgaXMgaW50ZXJhY3RpdmVcblx0XHRpZiAoIHZhbHVlICkge1xuXHRcdFx0dGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuaG92ZXJhYmxlLCBudWxsLCBcInVpLXN0YXRlLWhvdmVyXCIgKTtcblx0XHRcdHRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmZvY3VzYWJsZSwgbnVsbCwgXCJ1aS1zdGF0ZS1mb2N1c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGVuYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3NldE9wdGlvbnMoIHsgZGlzYWJsZWQ6IGZhbHNlIH0gKTtcblx0fSxcblxuXHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyggeyBkaXNhYmxlZDogdHJ1ZSB9ICk7XG5cdH0sXG5cblx0X2NsYXNzZXM6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdHZhciBmdWxsID0gW107XG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xuXG5cdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKCB7XG5cdFx0XHRlbGVtZW50OiB0aGlzLmVsZW1lbnQsXG5cdFx0XHRjbGFzc2VzOiB0aGlzLm9wdGlvbnMuY2xhc3NlcyB8fCB7fVxuXHRcdH0sIG9wdGlvbnMgKTtcblxuXHRcdGZ1bmN0aW9uIHByb2Nlc3NDbGFzc1N0cmluZyggY2xhc3NlcywgY2hlY2tPcHRpb24gKSB7XG5cdFx0XHR2YXIgY3VycmVudCwgaTtcblx0XHRcdGZvciAoIGkgPSAwOyBpIDwgY2xhc3Nlcy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0Y3VycmVudCA9IHRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGNsYXNzZXNbIGkgXSBdIHx8ICQoKTtcblx0XHRcdFx0aWYgKCBvcHRpb25zLmFkZCApIHtcblx0XHRcdFx0XHRjdXJyZW50ID0gJCggJC51bmlxdWUoIGN1cnJlbnQuZ2V0KCkuY29uY2F0KCBvcHRpb25zLmVsZW1lbnQuZ2V0KCkgKSApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y3VycmVudCA9ICQoIGN1cnJlbnQubm90KCBvcHRpb25zLmVsZW1lbnQgKS5nZXQoKSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGNsYXNzZXNbIGkgXSBdID0gY3VycmVudDtcblx0XHRcdFx0ZnVsbC5wdXNoKCBjbGFzc2VzWyBpIF0gKTtcblx0XHRcdFx0aWYgKCBjaGVja09wdGlvbiAmJiBvcHRpb25zLmNsYXNzZXNbIGNsYXNzZXNbIGkgXSBdICkge1xuXHRcdFx0XHRcdGZ1bGwucHVzaCggb3B0aW9ucy5jbGFzc2VzWyBjbGFzc2VzWyBpIF0gXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dGhpcy5fb24oIG9wdGlvbnMuZWxlbWVudCwge1xuXHRcdFx0XCJyZW1vdmVcIjogXCJfdW50cmFja0NsYXNzZXNFbGVtZW50XCJcblx0XHR9ICk7XG5cblx0XHRpZiAoIG9wdGlvbnMua2V5cyApIHtcblx0XHRcdHByb2Nlc3NDbGFzc1N0cmluZyggb3B0aW9ucy5rZXlzLm1hdGNoKCAvXFxTKy9nICkgfHwgW10sIHRydWUgKTtcblx0XHR9XG5cdFx0aWYgKCBvcHRpb25zLmV4dHJhICkge1xuXHRcdFx0cHJvY2Vzc0NsYXNzU3RyaW5nKCBvcHRpb25zLmV4dHJhLm1hdGNoKCAvXFxTKy9nICkgfHwgW10gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZnVsbC5qb2luKCBcIiBcIiApO1xuXHR9LFxuXG5cdF91bnRyYWNrQ2xhc3Nlc0VsZW1lbnQ6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHR2YXIgdGhhdCA9IHRoaXM7XG5cdFx0JC5lYWNoKCB0aGF0LmNsYXNzZXNFbGVtZW50TG9va3VwLCBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHRcdGlmICggJC5pbkFycmF5KCBldmVudC50YXJnZXQsIHZhbHVlICkgIT09IC0xICkge1xuXHRcdFx0XHR0aGF0LmNsYXNzZXNFbGVtZW50TG9va3VwWyBrZXkgXSA9ICQoIHZhbHVlLm5vdCggZXZlbnQudGFyZ2V0ICkuZ2V0KCkgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0X3JlbW92ZUNsYXNzOiBmdW5jdGlvbiggZWxlbWVudCwga2V5cywgZXh0cmEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3RvZ2dsZUNsYXNzKCBlbGVtZW50LCBrZXlzLCBleHRyYSwgZmFsc2UgKTtcblx0fSxcblxuXHRfYWRkQ2xhc3M6IGZ1bmN0aW9uKCBlbGVtZW50LCBrZXlzLCBleHRyYSApIHtcblx0XHRyZXR1cm4gdGhpcy5fdG9nZ2xlQ2xhc3MoIGVsZW1lbnQsIGtleXMsIGV4dHJhLCB0cnVlICk7XG5cdH0sXG5cblx0X3RvZ2dsZUNsYXNzOiBmdW5jdGlvbiggZWxlbWVudCwga2V5cywgZXh0cmEsIGFkZCApIHtcblx0XHRhZGQgPSAoIHR5cGVvZiBhZGQgPT09IFwiYm9vbGVhblwiICkgPyBhZGQgOiBleHRyYTtcblx0XHR2YXIgc2hpZnQgPSAoIHR5cGVvZiBlbGVtZW50ID09PSBcInN0cmluZ1wiIHx8IGVsZW1lbnQgPT09IG51bGwgKSxcblx0XHRcdG9wdGlvbnMgPSB7XG5cdFx0XHRcdGV4dHJhOiBzaGlmdCA/IGtleXMgOiBleHRyYSxcblx0XHRcdFx0a2V5czogc2hpZnQgPyBlbGVtZW50IDoga2V5cyxcblx0XHRcdFx0ZWxlbWVudDogc2hpZnQgPyB0aGlzLmVsZW1lbnQgOiBlbGVtZW50LFxuXHRcdFx0XHRhZGQ6IGFkZFxuXHRcdFx0fTtcblx0XHRvcHRpb25zLmVsZW1lbnQudG9nZ2xlQ2xhc3MoIHRoaXMuX2NsYXNzZXMoIG9wdGlvbnMgKSwgYWRkICk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0X29uOiBmdW5jdGlvbiggc3VwcHJlc3NEaXNhYmxlZENoZWNrLCBlbGVtZW50LCBoYW5kbGVycyApIHtcblx0XHR2YXIgZGVsZWdhdGVFbGVtZW50O1xuXHRcdHZhciBpbnN0YW5jZSA9IHRoaXM7XG5cblx0XHQvLyBObyBzdXBwcmVzc0Rpc2FibGVkQ2hlY2sgZmxhZywgc2h1ZmZsZSBhcmd1bWVudHNcblx0XHRpZiAoIHR5cGVvZiBzdXBwcmVzc0Rpc2FibGVkQ2hlY2sgIT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0aGFuZGxlcnMgPSBlbGVtZW50O1xuXHRcdFx0ZWxlbWVudCA9IHN1cHByZXNzRGlzYWJsZWRDaGVjaztcblx0XHRcdHN1cHByZXNzRGlzYWJsZWRDaGVjayA9IGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIE5vIGVsZW1lbnQgYXJndW1lbnQsIHNodWZmbGUgYW5kIHVzZSB0aGlzLmVsZW1lbnRcblx0XHRpZiAoICFoYW5kbGVycyApIHtcblx0XHRcdGhhbmRsZXJzID0gZWxlbWVudDtcblx0XHRcdGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG5cdFx0XHRkZWxlZ2F0ZUVsZW1lbnQgPSB0aGlzLndpZGdldCgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtZW50ID0gZGVsZWdhdGVFbGVtZW50ID0gJCggZWxlbWVudCApO1xuXHRcdFx0dGhpcy5iaW5kaW5ncyA9IHRoaXMuYmluZGluZ3MuYWRkKCBlbGVtZW50ICk7XG5cdFx0fVxuXG5cdFx0JC5lYWNoKCBoYW5kbGVycywgZnVuY3Rpb24oIGV2ZW50LCBoYW5kbGVyICkge1xuXHRcdFx0ZnVuY3Rpb24gaGFuZGxlclByb3h5KCkge1xuXG5cdFx0XHRcdC8vIEFsbG93IHdpZGdldHMgdG8gY3VzdG9taXplIHRoZSBkaXNhYmxlZCBoYW5kbGluZ1xuXHRcdFx0XHQvLyAtIGRpc2FibGVkIGFzIGFuIGFycmF5IGluc3RlYWQgb2YgYm9vbGVhblxuXHRcdFx0XHQvLyAtIGRpc2FibGVkIGNsYXNzIGFzIG1ldGhvZCBmb3IgZGlzYWJsaW5nIGluZGl2aWR1YWwgcGFydHNcblx0XHRcdFx0aWYgKCAhc3VwcHJlc3NEaXNhYmxlZENoZWNrICYmXG5cdFx0XHRcdFx0XHQoIGluc3RhbmNlLm9wdGlvbnMuZGlzYWJsZWQgPT09IHRydWUgfHxcblx0XHRcdFx0XHRcdCQoIHRoaXMgKS5oYXNDbGFzcyggXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiICkgKSApIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuICggdHlwZW9mIGhhbmRsZXIgPT09IFwic3RyaW5nXCIgPyBpbnN0YW5jZVsgaGFuZGxlciBdIDogaGFuZGxlciApXG5cdFx0XHRcdFx0LmFwcGx5KCBpbnN0YW5jZSwgYXJndW1lbnRzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvcHkgdGhlIGd1aWQgc28gZGlyZWN0IHVuYmluZGluZyB3b3Jrc1xuXHRcdFx0aWYgKCB0eXBlb2YgaGFuZGxlciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0aGFuZGxlclByb3h5Lmd1aWQgPSBoYW5kbGVyLmd1aWQgPVxuXHRcdFx0XHRcdGhhbmRsZXIuZ3VpZCB8fCBoYW5kbGVyUHJveHkuZ3VpZCB8fCAkLmd1aWQrKztcblx0XHRcdH1cblxuXHRcdFx0dmFyIG1hdGNoID0gZXZlbnQubWF0Y2goIC9eKFtcXHc6LV0qKVxccyooLiopJC8gKTtcblx0XHRcdHZhciBldmVudE5hbWUgPSBtYXRjaFsgMSBdICsgaW5zdGFuY2UuZXZlbnROYW1lc3BhY2U7XG5cdFx0XHR2YXIgc2VsZWN0b3IgPSBtYXRjaFsgMiBdO1xuXG5cdFx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0XHRkZWxlZ2F0ZUVsZW1lbnQub24oIGV2ZW50TmFtZSwgc2VsZWN0b3IsIGhhbmRsZXJQcm94eSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudC5vbiggZXZlbnROYW1lLCBoYW5kbGVyUHJveHkgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0X29mZjogZnVuY3Rpb24oIGVsZW1lbnQsIGV2ZW50TmFtZSApIHtcblx0XHRldmVudE5hbWUgPSAoIGV2ZW50TmFtZSB8fCBcIlwiICkuc3BsaXQoIFwiIFwiICkuam9pbiggdGhpcy5ldmVudE5hbWVzcGFjZSArIFwiIFwiICkgK1xuXHRcdFx0dGhpcy5ldmVudE5hbWVzcGFjZTtcblx0XHRlbGVtZW50Lm9mZiggZXZlbnROYW1lICkub2ZmKCBldmVudE5hbWUgKTtcblxuXHRcdC8vIENsZWFyIHRoZSBzdGFjayB0byBhdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1Nilcblx0XHR0aGlzLmJpbmRpbmdzID0gJCggdGhpcy5iaW5kaW5ncy5ub3QoIGVsZW1lbnQgKS5nZXQoKSApO1xuXHRcdHRoaXMuZm9jdXNhYmxlID0gJCggdGhpcy5mb2N1c2FibGUubm90KCBlbGVtZW50ICkuZ2V0KCkgKTtcblx0XHR0aGlzLmhvdmVyYWJsZSA9ICQoIHRoaXMuaG92ZXJhYmxlLm5vdCggZWxlbWVudCApLmdldCgpICk7XG5cdH0sXG5cblx0X2RlbGF5OiBmdW5jdGlvbiggaGFuZGxlciwgZGVsYXkgKSB7XG5cdFx0ZnVuY3Rpb24gaGFuZGxlclByb3h5KCkge1xuXHRcdFx0cmV0dXJuICggdHlwZW9mIGhhbmRsZXIgPT09IFwic3RyaW5nXCIgPyBpbnN0YW5jZVsgaGFuZGxlciBdIDogaGFuZGxlciApXG5cdFx0XHRcdC5hcHBseSggaW5zdGFuY2UsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xuXHRcdHJldHVybiBzZXRUaW1lb3V0KCBoYW5kbGVyUHJveHksIGRlbGF5IHx8IDAgKTtcblx0fSxcblxuXHRfaG92ZXJhYmxlOiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHR0aGlzLmhvdmVyYWJsZSA9IHRoaXMuaG92ZXJhYmxlLmFkZCggZWxlbWVudCApO1xuXHRcdHRoaXMuX29uKCBlbGVtZW50LCB7XG5cdFx0XHRtb3VzZWVudGVyOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsIFwidWktc3RhdGUtaG92ZXJcIiApO1xuXHRcdFx0fSxcblx0XHRcdG1vdXNlbGVhdmU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0dGhpcy5fcmVtb3ZlQ2xhc3MoICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwgbnVsbCwgXCJ1aS1zdGF0ZS1ob3ZlclwiICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdF9mb2N1c2FibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdHRoaXMuZm9jdXNhYmxlID0gdGhpcy5mb2N1c2FibGUuYWRkKCBlbGVtZW50ICk7XG5cdFx0dGhpcy5fb24oIGVsZW1lbnQsIHtcblx0XHRcdGZvY3VzaW46IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0dGhpcy5fYWRkQ2xhc3MoICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwgbnVsbCwgXCJ1aS1zdGF0ZS1mb2N1c1wiICk7XG5cdFx0XHR9LFxuXHRcdFx0Zm9jdXNvdXQ6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0dGhpcy5fcmVtb3ZlQ2xhc3MoICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwgbnVsbCwgXCJ1aS1zdGF0ZS1mb2N1c1wiICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdF90cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZXZlbnQsIGRhdGEgKSB7XG5cdFx0dmFyIHByb3AsIG9yaWc7XG5cdFx0dmFyIGNhbGxiYWNrID0gdGhpcy5vcHRpb25zWyB0eXBlIF07XG5cblx0XHRkYXRhID0gZGF0YSB8fCB7fTtcblx0XHRldmVudCA9ICQuRXZlbnQoIGV2ZW50ICk7XG5cdFx0ZXZlbnQudHlwZSA9ICggdHlwZSA9PT0gdGhpcy53aWRnZXRFdmVudFByZWZpeCA/XG5cdFx0XHR0eXBlIDpcblx0XHRcdHRoaXMud2lkZ2V0RXZlbnRQcmVmaXggKyB0eXBlICkudG9Mb3dlckNhc2UoKTtcblxuXHRcdC8vIFRoZSBvcmlnaW5hbCBldmVudCBtYXkgY29tZSBmcm9tIGFueSBlbGVtZW50XG5cdFx0Ly8gc28gd2UgbmVlZCB0byByZXNldCB0aGUgdGFyZ2V0IG9uIHRoZSBuZXcgZXZlbnRcblx0XHRldmVudC50YXJnZXQgPSB0aGlzLmVsZW1lbnRbIDAgXTtcblxuXHRcdC8vIENvcHkgb3JpZ2luYWwgZXZlbnQgcHJvcGVydGllcyBvdmVyIHRvIHRoZSBuZXcgZXZlbnRcblx0XHRvcmlnID0gZXZlbnQub3JpZ2luYWxFdmVudDtcblx0XHRpZiAoIG9yaWcgKSB7XG5cdFx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHRcdGlmICggISggcHJvcCBpbiBldmVudCApICkge1xuXHRcdFx0XHRcdGV2ZW50WyBwcm9wIF0gPSBvcmlnWyBwcm9wIF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aGlzLmVsZW1lbnQudHJpZ2dlciggZXZlbnQsIGRhdGEgKTtcblx0XHRyZXR1cm4gISggJC5pc0Z1bmN0aW9uKCBjYWxsYmFjayApICYmXG5cdFx0XHRjYWxsYmFjay5hcHBseSggdGhpcy5lbGVtZW50WyAwIF0sIFsgZXZlbnQgXS5jb25jYXQoIGRhdGEgKSApID09PSBmYWxzZSB8fFxuXHRcdFx0ZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKTtcblx0fVxufTtcblxuJC5lYWNoKCB7IHNob3c6IFwiZmFkZUluXCIsIGhpZGU6IFwiZmFkZU91dFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIGRlZmF1bHRFZmZlY3QgKSB7XG5cdCQuV2lkZ2V0LnByb3RvdHlwZVsgXCJfXCIgKyBtZXRob2QgXSA9IGZ1bmN0aW9uKCBlbGVtZW50LCBvcHRpb25zLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b3B0aW9ucyA9IHsgZWZmZWN0OiBvcHRpb25zIH07XG5cdFx0fVxuXG5cdFx0dmFyIGhhc09wdGlvbnM7XG5cdFx0dmFyIGVmZmVjdE5hbWUgPSAhb3B0aW9ucyA/XG5cdFx0XHRtZXRob2QgOlxuXHRcdFx0b3B0aW9ucyA9PT0gdHJ1ZSB8fCB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJudW1iZXJcIiA/XG5cdFx0XHRcdGRlZmF1bHRFZmZlY3QgOlxuXHRcdFx0XHRvcHRpb25zLmVmZmVjdCB8fCBkZWZhdWx0RWZmZWN0O1xuXG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cdFx0aWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdG9wdGlvbnMgPSB7IGR1cmF0aW9uOiBvcHRpb25zIH07XG5cdFx0fVxuXG5cdFx0aGFzT3B0aW9ucyA9ICEkLmlzRW1wdHlPYmplY3QoIG9wdGlvbnMgKTtcblx0XHRvcHRpb25zLmNvbXBsZXRlID0gY2FsbGJhY2s7XG5cblx0XHRpZiAoIG9wdGlvbnMuZGVsYXkgKSB7XG5cdFx0XHRlbGVtZW50LmRlbGF5KCBvcHRpb25zLmRlbGF5ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBoYXNPcHRpb25zICYmICQuZWZmZWN0cyAmJiAkLmVmZmVjdHMuZWZmZWN0WyBlZmZlY3ROYW1lIF0gKSB7XG5cdFx0XHRlbGVtZW50WyBtZXRob2QgXSggb3B0aW9ucyApO1xuXHRcdH0gZWxzZSBpZiAoIGVmZmVjdE5hbWUgIT09IG1ldGhvZCAmJiBlbGVtZW50WyBlZmZlY3ROYW1lIF0gKSB7XG5cdFx0XHRlbGVtZW50WyBlZmZlY3ROYW1lIF0oIG9wdGlvbnMuZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nLCBjYWxsYmFjayApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtZW50LnF1ZXVlKCBmdW5jdGlvbiggbmV4dCApIHtcblx0XHRcdFx0JCggdGhpcyApWyBtZXRob2QgXSgpO1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrLmNhbGwoIGVsZW1lbnRbIDAgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG5leHQoKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cdH07XG59ICk7XG5cbnJldHVybiAkLndpZGdldDtcblxufSApICk7XG4iLCIoIGZ1bmN0aW9uKCBmYWN0b3J5ICkge1xuXHRpZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXG5cdFx0Ly8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLlxuXHRcdGRlZmluZSggWyBcImpxdWVyeVwiLCBcIi4vdmVyc2lvblwiIF0sIGZhY3RvcnkgKTtcblx0fSBlbHNlIHtcblxuXHRcdC8vIEJyb3dzZXIgZ2xvYmFsc1xuXHRcdGZhY3RvcnkoIGpRdWVyeSApO1xuXHR9XG59ICggZnVuY3Rpb24oICQgKSB7XG5cbi8vIFRoaXMgZmlsZSBpcyBkZXByZWNhdGVkXG5yZXR1cm4gJC51aS5pZSA9ICEhL21zaWUgW1xcdy5dKy8uZXhlYyggbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpICk7XG59ICkgKTtcbiIsIi8qIVxuICogalF1ZXJ5IFVJIFNsaWRlciAxLjEyLjFcbiAqIGh0dHA6Ly9qcXVlcnl1aS5jb21cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxuICovXG5cbi8vPj5sYWJlbDogU2xpZGVyXG4vLz4+Z3JvdXA6IFdpZGdldHNcbi8vPj5kZXNjcmlwdGlvbjogRGlzcGxheXMgYSBmbGV4aWJsZSBzbGlkZXIgd2l0aCByYW5nZXMgYW5kIGFjY2Vzc2liaWxpdHkgdmlhIGtleWJvYXJkLlxuLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NsaWRlci9cbi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9zbGlkZXIvXG4vLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvY29yZS5jc3Ncbi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9zbGlkZXIuY3NzXG4vLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3NcblxuKCBmdW5jdGlvbiggZmFjdG9yeSApIHtcblx0aWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblxuXHRcdC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cblx0XHRkZWZpbmUoIFtcblx0XHRcdFwianF1ZXJ5XCIsXG5cdFx0XHRcIi4vbW91c2VcIixcblx0XHRcdFwiLi4va2V5Y29kZVwiLFxuXHRcdFx0XCIuLi92ZXJzaW9uXCIsXG5cdFx0XHRcIi4uL3dpZGdldFwiXG5cdFx0XSwgZmFjdG9yeSApO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gQnJvd3NlciBnbG9iYWxzXG5cdFx0ZmFjdG9yeSggalF1ZXJ5ICk7XG5cdH1cbn0oIGZ1bmN0aW9uKCAkICkge1xuXG5yZXR1cm4gJC53aWRnZXQoIFwidWkuc2xpZGVyXCIsICQudWkubW91c2UsIHtcblx0dmVyc2lvbjogXCIxLjEyLjFcIixcblx0d2lkZ2V0RXZlbnRQcmVmaXg6IFwic2xpZGVcIixcblxuXHRvcHRpb25zOiB7XG5cdFx0YW5pbWF0ZTogZmFsc2UsXG5cdFx0Y2xhc3Nlczoge1xuXHRcdFx0XCJ1aS1zbGlkZXJcIjogXCJ1aS1jb3JuZXItYWxsXCIsXG5cdFx0XHRcInVpLXNsaWRlci1oYW5kbGVcIjogXCJ1aS1jb3JuZXItYWxsXCIsXG5cblx0XHRcdC8vIE5vdGU6IHVpLXdpZGdldC1oZWFkZXIgaXNuJ3QgdGhlIG1vc3QgZml0dGluZ2x5IHNlbWFudGljIGZyYW1ld29yayBjbGFzcyBmb3IgdGhpc1xuXHRcdFx0Ly8gZWxlbWVudCwgYnV0IHdvcmtlZCBiZXN0IHZpc3VhbGx5IHdpdGggYSB2YXJpZXR5IG9mIHRoZW1lc1xuXHRcdFx0XCJ1aS1zbGlkZXItcmFuZ2VcIjogXCJ1aS1jb3JuZXItYWxsIHVpLXdpZGdldC1oZWFkZXJcIlxuXHRcdH0sXG5cdFx0ZGlzdGFuY2U6IDAsXG5cdFx0bWF4OiAxMDAsXG5cdFx0bWluOiAwLFxuXHRcdG9yaWVudGF0aW9uOiBcImhvcml6b250YWxcIixcblx0XHRyYW5nZTogZmFsc2UsXG5cdFx0c3RlcDogMSxcblx0XHR2YWx1ZTogMCxcblx0XHR2YWx1ZXM6IG51bGwsXG5cblx0XHQvLyBDYWxsYmFja3Ncblx0XHRjaGFuZ2U6IG51bGwsXG5cdFx0c2xpZGU6IG51bGwsXG5cdFx0c3RhcnQ6IG51bGwsXG5cdFx0c3RvcDogbnVsbFxuXHR9LFxuXG5cdC8vIE51bWJlciBvZiBwYWdlcyBpbiBhIHNsaWRlclxuXHQvLyAoaG93IG1hbnkgdGltZXMgY2FuIHlvdSBwYWdlIHVwL2Rvd24gdG8gZ28gdGhyb3VnaCB0aGUgd2hvbGUgcmFuZ2UpXG5cdG51bVBhZ2VzOiA1LFxuXG5cdF9jcmVhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMuX2tleVNsaWRpbmcgPSBmYWxzZTtcblx0XHR0aGlzLl9tb3VzZVNsaWRpbmcgPSBmYWxzZTtcblx0XHR0aGlzLl9hbmltYXRlT2ZmID0gdHJ1ZTtcblx0XHR0aGlzLl9oYW5kbGVJbmRleCA9IG51bGw7XG5cdFx0dGhpcy5fZGV0ZWN0T3JpZW50YXRpb24oKTtcblx0XHR0aGlzLl9tb3VzZUluaXQoKTtcblx0XHR0aGlzLl9jYWxjdWxhdGVOZXdNYXgoKTtcblxuXHRcdHRoaXMuX2FkZENsYXNzKCBcInVpLXNsaWRlciB1aS1zbGlkZXItXCIgKyB0aGlzLm9yaWVudGF0aW9uLFxuXHRcdFx0XCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnRcIiApO1xuXG5cdFx0dGhpcy5fcmVmcmVzaCgpO1xuXG5cdFx0dGhpcy5fYW5pbWF0ZU9mZiA9IGZhbHNlO1xuXHR9LFxuXG5cdF9yZWZyZXNoOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLl9jcmVhdGVSYW5nZSgpO1xuXHRcdHRoaXMuX2NyZWF0ZUhhbmRsZXMoKTtcblx0XHR0aGlzLl9zZXR1cEV2ZW50cygpO1xuXHRcdHRoaXMuX3JlZnJlc2hWYWx1ZSgpO1xuXHR9LFxuXG5cdF9jcmVhdGVIYW5kbGVzOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaSwgaGFuZGxlQ291bnQsXG5cdFx0XHRvcHRpb25zID0gdGhpcy5vcHRpb25zLFxuXHRcdFx0ZXhpc3RpbmdIYW5kbGVzID0gdGhpcy5lbGVtZW50LmZpbmQoIFwiLnVpLXNsaWRlci1oYW5kbGVcIiApLFxuXHRcdFx0aGFuZGxlID0gXCI8c3BhbiB0YWJpbmRleD0nMCc+PC9zcGFuPlwiLFxuXHRcdFx0aGFuZGxlcyA9IFtdO1xuXG5cdFx0aGFuZGxlQ291bnQgPSAoIG9wdGlvbnMudmFsdWVzICYmIG9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHx8IDE7XG5cblx0XHRpZiAoIGV4aXN0aW5nSGFuZGxlcy5sZW5ndGggPiBoYW5kbGVDb3VudCApIHtcblx0XHRcdGV4aXN0aW5nSGFuZGxlcy5zbGljZSggaGFuZGxlQ291bnQgKS5yZW1vdmUoKTtcblx0XHRcdGV4aXN0aW5nSGFuZGxlcyA9IGV4aXN0aW5nSGFuZGxlcy5zbGljZSggMCwgaGFuZGxlQ291bnQgKTtcblx0XHR9XG5cblx0XHRmb3IgKCBpID0gZXhpc3RpbmdIYW5kbGVzLmxlbmd0aDsgaSA8IGhhbmRsZUNvdW50OyBpKysgKSB7XG5cdFx0XHRoYW5kbGVzLnB1c2goIGhhbmRsZSApO1xuXHRcdH1cblxuXHRcdHRoaXMuaGFuZGxlcyA9IGV4aXN0aW5nSGFuZGxlcy5hZGQoICQoIGhhbmRsZXMuam9pbiggXCJcIiApICkuYXBwZW5kVG8oIHRoaXMuZWxlbWVudCApICk7XG5cblx0XHR0aGlzLl9hZGRDbGFzcyggdGhpcy5oYW5kbGVzLCBcInVpLXNsaWRlci1oYW5kbGVcIiwgXCJ1aS1zdGF0ZS1kZWZhdWx0XCIgKTtcblxuXHRcdHRoaXMuaGFuZGxlID0gdGhpcy5oYW5kbGVzLmVxKCAwICk7XG5cblx0XHR0aGlzLmhhbmRsZXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHQkKCB0aGlzIClcblx0XHRcdFx0LmRhdGEoIFwidWktc2xpZGVyLWhhbmRsZS1pbmRleFwiLCBpIClcblx0XHRcdFx0LmF0dHIoIFwidGFiSW5kZXhcIiwgMCApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRfY3JlYXRlUmFuZ2U6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zO1xuXG5cdFx0aWYgKCBvcHRpb25zLnJhbmdlICkge1xuXHRcdFx0aWYgKCBvcHRpb25zLnJhbmdlID09PSB0cnVlICkge1xuXHRcdFx0XHRpZiAoICFvcHRpb25zLnZhbHVlcyApIHtcblx0XHRcdFx0XHRvcHRpb25zLnZhbHVlcyA9IFsgdGhpcy5fdmFsdWVNaW4oKSwgdGhpcy5fdmFsdWVNaW4oKSBdO1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBvcHRpb25zLnZhbHVlcy5sZW5ndGggJiYgb3B0aW9ucy52YWx1ZXMubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRcdG9wdGlvbnMudmFsdWVzID0gWyBvcHRpb25zLnZhbHVlc1sgMCBdLCBvcHRpb25zLnZhbHVlc1sgMCBdIF07XG5cdFx0XHRcdH0gZWxzZSBpZiAoICQuaXNBcnJheSggb3B0aW9ucy52YWx1ZXMgKSApIHtcblx0XHRcdFx0XHRvcHRpb25zLnZhbHVlcyA9IG9wdGlvbnMudmFsdWVzLnNsaWNlKCAwICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKCAhdGhpcy5yYW5nZSB8fCAhdGhpcy5yYW5nZS5sZW5ndGggKSB7XG5cdFx0XHRcdHRoaXMucmFuZ2UgPSAkKCBcIjxkaXY+XCIgKVxuXHRcdFx0XHRcdC5hcHBlbmRUbyggdGhpcy5lbGVtZW50ICk7XG5cblx0XHRcdFx0dGhpcy5fYWRkQ2xhc3MoIHRoaXMucmFuZ2UsIFwidWktc2xpZGVyLXJhbmdlXCIgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLnJhbmdlLCBcInVpLXNsaWRlci1yYW5nZS1taW4gdWktc2xpZGVyLXJhbmdlLW1heFwiICk7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIHJhbmdlIHN3aXRjaGluZyBmcm9tIHRydWUgdG8gbWluL21heFxuXHRcdFx0XHR0aGlzLnJhbmdlLmNzcygge1xuXHRcdFx0XHRcdFwibGVmdFwiOiBcIlwiLFxuXHRcdFx0XHRcdFwiYm90dG9tXCI6IFwiXCJcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBvcHRpb25zLnJhbmdlID09PSBcIm1pblwiIHx8IG9wdGlvbnMucmFuZ2UgPT09IFwibWF4XCIgKSB7XG5cdFx0XHRcdHRoaXMuX2FkZENsYXNzKCB0aGlzLnJhbmdlLCBcInVpLXNsaWRlci1yYW5nZS1cIiArIG9wdGlvbnMucmFuZ2UgKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKCB0aGlzLnJhbmdlICkge1xuXHRcdFx0XHR0aGlzLnJhbmdlLnJlbW92ZSgpO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5yYW5nZSA9IG51bGw7XG5cdFx0fVxuXHR9LFxuXG5cdF9zZXR1cEV2ZW50czogZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy5fb2ZmKCB0aGlzLmhhbmRsZXMgKTtcblx0XHR0aGlzLl9vbiggdGhpcy5oYW5kbGVzLCB0aGlzLl9oYW5kbGVFdmVudHMgKTtcblx0XHR0aGlzLl9ob3ZlcmFibGUoIHRoaXMuaGFuZGxlcyApO1xuXHRcdHRoaXMuX2ZvY3VzYWJsZSggdGhpcy5oYW5kbGVzICk7XG5cdH0sXG5cblx0X2Rlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMuaGFuZGxlcy5yZW1vdmUoKTtcblx0XHRpZiAoIHRoaXMucmFuZ2UgKSB7XG5cdFx0XHR0aGlzLnJhbmdlLnJlbW92ZSgpO1xuXHRcdH1cblxuXHRcdHRoaXMuX21vdXNlRGVzdHJveSgpO1xuXHR9LFxuXG5cdF9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHR2YXIgcG9zaXRpb24sIG5vcm1WYWx1ZSwgZGlzdGFuY2UsIGNsb3Nlc3RIYW5kbGUsIGluZGV4LCBhbGxvd2VkLCBvZmZzZXQsIG1vdXNlT3ZlckhhbmRsZSxcblx0XHRcdHRoYXQgPSB0aGlzLFxuXHRcdFx0byA9IHRoaXMub3B0aW9ucztcblxuXHRcdGlmICggby5kaXNhYmxlZCApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHR0aGlzLmVsZW1lbnRTaXplID0ge1xuXHRcdFx0d2lkdGg6IHRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCksXG5cdFx0XHRoZWlnaHQ6IHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpXG5cdFx0fTtcblx0XHR0aGlzLmVsZW1lbnRPZmZzZXQgPSB0aGlzLmVsZW1lbnQub2Zmc2V0KCk7XG5cblx0XHRwb3NpdGlvbiA9IHsgeDogZXZlbnQucGFnZVgsIHk6IGV2ZW50LnBhZ2VZIH07XG5cdFx0bm9ybVZhbHVlID0gdGhpcy5fbm9ybVZhbHVlRnJvbU1vdXNlKCBwb3NpdGlvbiApO1xuXHRcdGRpc3RhbmNlID0gdGhpcy5fdmFsdWVNYXgoKSAtIHRoaXMuX3ZhbHVlTWluKCkgKyAxO1xuXHRcdHRoaXMuaGFuZGxlcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB0aGlzRGlzdGFuY2UgPSBNYXRoLmFicyggbm9ybVZhbHVlIC0gdGhhdC52YWx1ZXMoIGkgKSApO1xuXHRcdFx0aWYgKCAoIGRpc3RhbmNlID4gdGhpc0Rpc3RhbmNlICkgfHxcblx0XHRcdFx0KCBkaXN0YW5jZSA9PT0gdGhpc0Rpc3RhbmNlICYmXG5cdFx0XHRcdFx0KCBpID09PSB0aGF0Ll9sYXN0Q2hhbmdlZFZhbHVlIHx8IHRoYXQudmFsdWVzKCBpICkgPT09IG8ubWluICkgKSApIHtcblx0XHRcdFx0ZGlzdGFuY2UgPSB0aGlzRGlzdGFuY2U7XG5cdFx0XHRcdGNsb3Nlc3RIYW5kbGUgPSAkKCB0aGlzICk7XG5cdFx0XHRcdGluZGV4ID0gaTtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0XHRhbGxvd2VkID0gdGhpcy5fc3RhcnQoIGV2ZW50LCBpbmRleCApO1xuXHRcdGlmICggYWxsb3dlZCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHRoaXMuX21vdXNlU2xpZGluZyA9IHRydWU7XG5cblx0XHR0aGlzLl9oYW5kbGVJbmRleCA9IGluZGV4O1xuXG5cdFx0dGhpcy5fYWRkQ2xhc3MoIGNsb3Nlc3RIYW5kbGUsIG51bGwsIFwidWktc3RhdGUtYWN0aXZlXCIgKTtcblx0XHRjbG9zZXN0SGFuZGxlLnRyaWdnZXIoIFwiZm9jdXNcIiApO1xuXG5cdFx0b2Zmc2V0ID0gY2xvc2VzdEhhbmRsZS5vZmZzZXQoKTtcblx0XHRtb3VzZU92ZXJIYW5kbGUgPSAhJCggZXZlbnQudGFyZ2V0ICkucGFyZW50cygpLmFkZEJhY2soKS5pcyggXCIudWktc2xpZGVyLWhhbmRsZVwiICk7XG5cdFx0dGhpcy5fY2xpY2tPZmZzZXQgPSBtb3VzZU92ZXJIYW5kbGUgPyB7IGxlZnQ6IDAsIHRvcDogMCB9IDoge1xuXHRcdFx0bGVmdDogZXZlbnQucGFnZVggLSBvZmZzZXQubGVmdCAtICggY2xvc2VzdEhhbmRsZS53aWR0aCgpIC8gMiApLFxuXHRcdFx0dG9wOiBldmVudC5wYWdlWSAtIG9mZnNldC50b3AgLVxuXHRcdFx0XHQoIGNsb3Nlc3RIYW5kbGUuaGVpZ2h0KCkgLyAyICkgLVxuXHRcdFx0XHQoIHBhcnNlSW50KCBjbG9zZXN0SGFuZGxlLmNzcyggXCJib3JkZXJUb3BXaWR0aFwiICksIDEwICkgfHwgMCApIC1cblx0XHRcdFx0KCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoIFwiYm9yZGVyQm90dG9tV2lkdGhcIiApLCAxMCApIHx8IDAgKSArXG5cdFx0XHRcdCggcGFyc2VJbnQoIGNsb3Nlc3RIYW5kbGUuY3NzKCBcIm1hcmdpblRvcFwiICksIDEwICkgfHwgMCApXG5cdFx0fTtcblxuXHRcdGlmICggIXRoaXMuaGFuZGxlcy5oYXNDbGFzcyggXCJ1aS1zdGF0ZS1ob3ZlclwiICkgKSB7XG5cdFx0XHR0aGlzLl9zbGlkZSggZXZlbnQsIGluZGV4LCBub3JtVmFsdWUgKTtcblx0XHR9XG5cdFx0dGhpcy5fYW5pbWF0ZU9mZiA9IHRydWU7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0sXG5cblx0X21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdF9tb3VzZURyYWc6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHR2YXIgcG9zaXRpb24gPSB7IHg6IGV2ZW50LnBhZ2VYLCB5OiBldmVudC5wYWdlWSB9LFxuXHRcdFx0bm9ybVZhbHVlID0gdGhpcy5fbm9ybVZhbHVlRnJvbU1vdXNlKCBwb3NpdGlvbiApO1xuXG5cdFx0dGhpcy5fc2xpZGUoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCwgbm9ybVZhbHVlICk7XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0sXG5cblx0X21vdXNlU3RvcDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdHRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmhhbmRsZXMsIG51bGwsIFwidWktc3RhdGUtYWN0aXZlXCIgKTtcblx0XHR0aGlzLl9tb3VzZVNsaWRpbmcgPSBmYWxzZTtcblxuXHRcdHRoaXMuX3N0b3AoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCApO1xuXHRcdHRoaXMuX2NoYW5nZSggZXZlbnQsIHRoaXMuX2hhbmRsZUluZGV4ICk7XG5cblx0XHR0aGlzLl9oYW5kbGVJbmRleCA9IG51bGw7XG5cdFx0dGhpcy5fY2xpY2tPZmZzZXQgPSBudWxsO1xuXHRcdHRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTtcblxuXHRcdHJldHVybiBmYWxzZTtcblx0fSxcblxuXHRfZGV0ZWN0T3JpZW50YXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMub3JpZW50YXRpb24gPSAoIHRoaXMub3B0aW9ucy5vcmllbnRhdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiICkgPyBcInZlcnRpY2FsXCIgOiBcImhvcml6b250YWxcIjtcblx0fSxcblxuXHRfbm9ybVZhbHVlRnJvbU1vdXNlOiBmdW5jdGlvbiggcG9zaXRpb24gKSB7XG5cdFx0dmFyIHBpeGVsVG90YWwsXG5cdFx0XHRwaXhlbE1vdXNlLFxuXHRcdFx0cGVyY2VudE1vdXNlLFxuXHRcdFx0dmFsdWVUb3RhbCxcblx0XHRcdHZhbHVlTW91c2U7XG5cblx0XHRpZiAoIHRoaXMub3JpZW50YXRpb24gPT09IFwiaG9yaXpvbnRhbFwiICkge1xuXHRcdFx0cGl4ZWxUb3RhbCA9IHRoaXMuZWxlbWVudFNpemUud2lkdGg7XG5cdFx0XHRwaXhlbE1vdXNlID0gcG9zaXRpb24ueCAtIHRoaXMuZWxlbWVudE9mZnNldC5sZWZ0IC1cblx0XHRcdFx0KCB0aGlzLl9jbGlja09mZnNldCA/IHRoaXMuX2NsaWNrT2Zmc2V0LmxlZnQgOiAwICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHBpeGVsVG90YWwgPSB0aGlzLmVsZW1lbnRTaXplLmhlaWdodDtcblx0XHRcdHBpeGVsTW91c2UgPSBwb3NpdGlvbi55IC0gdGhpcy5lbGVtZW50T2Zmc2V0LnRvcCAtXG5cdFx0XHRcdCggdGhpcy5fY2xpY2tPZmZzZXQgPyB0aGlzLl9jbGlja09mZnNldC50b3AgOiAwICk7XG5cdFx0fVxuXG5cdFx0cGVyY2VudE1vdXNlID0gKCBwaXhlbE1vdXNlIC8gcGl4ZWxUb3RhbCApO1xuXHRcdGlmICggcGVyY2VudE1vdXNlID4gMSApIHtcblx0XHRcdHBlcmNlbnRNb3VzZSA9IDE7XG5cdFx0fVxuXHRcdGlmICggcGVyY2VudE1vdXNlIDwgMCApIHtcblx0XHRcdHBlcmNlbnRNb3VzZSA9IDA7XG5cdFx0fVxuXHRcdGlmICggdGhpcy5vcmllbnRhdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiICkge1xuXHRcdFx0cGVyY2VudE1vdXNlID0gMSAtIHBlcmNlbnRNb3VzZTtcblx0XHR9XG5cblx0XHR2YWx1ZVRvdGFsID0gdGhpcy5fdmFsdWVNYXgoKSAtIHRoaXMuX3ZhbHVlTWluKCk7XG5cdFx0dmFsdWVNb3VzZSA9IHRoaXMuX3ZhbHVlTWluKCkgKyBwZXJjZW50TW91c2UgKiB2YWx1ZVRvdGFsO1xuXG5cdFx0cmV0dXJuIHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWx1ZU1vdXNlICk7XG5cdH0sXG5cblx0X3VpSGFzaDogZnVuY3Rpb24oIGluZGV4LCB2YWx1ZSwgdmFsdWVzICkge1xuXHRcdHZhciB1aUhhc2ggPSB7XG5cdFx0XHRoYW5kbGU6IHRoaXMuaGFuZGxlc1sgaW5kZXggXSxcblx0XHRcdGhhbmRsZUluZGV4OiBpbmRleCxcblx0XHRcdHZhbHVlOiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB0aGlzLnZhbHVlKClcblx0XHR9O1xuXG5cdFx0aWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkge1xuXHRcdFx0dWlIYXNoLnZhbHVlID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDogdGhpcy52YWx1ZXMoIGluZGV4ICk7XG5cdFx0XHR1aUhhc2gudmFsdWVzID0gdmFsdWVzIHx8IHRoaXMudmFsdWVzKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHVpSGFzaDtcblx0fSxcblxuXHRfaGFzTXVsdGlwbGVWYWx1ZXM6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm9wdGlvbnMudmFsdWVzICYmIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoO1xuXHR9LFxuXG5cdF9zdGFydDogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCApIHtcblx0XHRyZXR1cm4gdGhpcy5fdHJpZ2dlciggXCJzdGFydFwiLCBldmVudCwgdGhpcy5fdWlIYXNoKCBpbmRleCApICk7XG5cdH0sXG5cblx0X3NsaWRlOiBmdW5jdGlvbiggZXZlbnQsIGluZGV4LCBuZXdWYWwgKSB7XG5cdFx0dmFyIGFsbG93ZWQsIG90aGVyVmFsLFxuXHRcdFx0Y3VycmVudFZhbHVlID0gdGhpcy52YWx1ZSgpLFxuXHRcdFx0bmV3VmFsdWVzID0gdGhpcy52YWx1ZXMoKTtcblxuXHRcdGlmICggdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSApIHtcblx0XHRcdG90aGVyVmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ID8gMCA6IDEgKTtcblx0XHRcdGN1cnJlbnRWYWx1ZSA9IHRoaXMudmFsdWVzKCBpbmRleCApO1xuXG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoID09PSAyICYmIHRoaXMub3B0aW9ucy5yYW5nZSA9PT0gdHJ1ZSApIHtcblx0XHRcdFx0bmV3VmFsID0gIGluZGV4ID09PSAwID8gTWF0aC5taW4oIG90aGVyVmFsLCBuZXdWYWwgKSA6IE1hdGgubWF4KCBvdGhlclZhbCwgbmV3VmFsICk7XG5cdFx0XHR9XG5cblx0XHRcdG5ld1ZhbHVlc1sgaW5kZXggXSA9IG5ld1ZhbDtcblx0XHR9XG5cblx0XHRpZiAoIG5ld1ZhbCA9PT0gY3VycmVudFZhbHVlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGFsbG93ZWQgPSB0aGlzLl90cmlnZ2VyKCBcInNsaWRlXCIsIGV2ZW50LCB0aGlzLl91aUhhc2goIGluZGV4LCBuZXdWYWwsIG5ld1ZhbHVlcyApICk7XG5cblx0XHQvLyBBIHNsaWRlIGNhbiBiZSBjYW5jZWxlZCBieSByZXR1cm5pbmcgZmFsc2UgZnJvbSB0aGUgc2xpZGUgY2FsbGJhY2tcblx0XHRpZiAoIGFsbG93ZWQgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSApIHtcblx0XHRcdHRoaXMudmFsdWVzKCBpbmRleCwgbmV3VmFsICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMudmFsdWUoIG5ld1ZhbCApO1xuXHRcdH1cblx0fSxcblxuXHRfc3RvcDogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCApIHtcblx0XHR0aGlzLl90cmlnZ2VyKCBcInN0b3BcIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggaW5kZXggKSApO1xuXHR9LFxuXG5cdF9jaGFuZ2U6IGZ1bmN0aW9uKCBldmVudCwgaW5kZXggKSB7XG5cdFx0aWYgKCAhdGhpcy5fa2V5U2xpZGluZyAmJiAhdGhpcy5fbW91c2VTbGlkaW5nICkge1xuXG5cdFx0XHQvL3N0b3JlIHRoZSBsYXN0IGNoYW5nZWQgdmFsdWUgaW5kZXggZm9yIHJlZmVyZW5jZSB3aGVuIGhhbmRsZXMgb3ZlcmxhcFxuXHRcdFx0dGhpcy5fbGFzdENoYW5nZWRWYWx1ZSA9IGluZGV4O1xuXHRcdFx0dGhpcy5fdHJpZ2dlciggXCJjaGFuZ2VcIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggaW5kZXggKSApO1xuXHRcdH1cblx0fSxcblxuXHR2YWx1ZTogZnVuY3Rpb24oIG5ld1ZhbHVlICkge1xuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBuZXdWYWx1ZSApO1xuXHRcdFx0dGhpcy5fcmVmcmVzaFZhbHVlKCk7XG5cdFx0XHR0aGlzLl9jaGFuZ2UoIG51bGwsIDAgKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5fdmFsdWUoKTtcblx0fSxcblxuXHR2YWx1ZXM6IGZ1bmN0aW9uKCBpbmRleCwgbmV3VmFsdWUgKSB7XG5cdFx0dmFyIHZhbHMsXG5cdFx0XHRuZXdWYWx1ZXMsXG5cdFx0XHRpO1xuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoID4gMSApIHtcblx0XHRcdHRoaXMub3B0aW9ucy52YWx1ZXNbIGluZGV4IF0gPSB0aGlzLl90cmltQWxpZ25WYWx1ZSggbmV3VmFsdWUgKTtcblx0XHRcdHRoaXMuX3JlZnJlc2hWYWx1ZSgpO1xuXHRcdFx0dGhpcy5fY2hhbmdlKCBudWxsLCBpbmRleCApO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggJC5pc0FycmF5KCBhcmd1bWVudHNbIDAgXSApICkge1xuXHRcdFx0XHR2YWxzID0gdGhpcy5vcHRpb25zLnZhbHVlcztcblx0XHRcdFx0bmV3VmFsdWVzID0gYXJndW1lbnRzWyAwIF07XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgdmFscy5sZW5ndGg7IGkgKz0gMSApIHtcblx0XHRcdFx0XHR2YWxzWyBpIF0gPSB0aGlzLl90cmltQWxpZ25WYWx1ZSggbmV3VmFsdWVzWyBpIF0gKTtcblx0XHRcdFx0XHR0aGlzLl9jaGFuZ2UoIG51bGwsIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl9yZWZyZXNoVmFsdWUoKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmICggdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5fdmFsdWVzKCBpbmRleCApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzLnZhbHVlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIHRoaXMuX3ZhbHVlcygpO1xuXHRcdH1cblx0fSxcblxuXHRfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgaSxcblx0XHRcdHZhbHNMZW5ndGggPSAwO1xuXG5cdFx0aWYgKCBrZXkgPT09IFwicmFuZ2VcIiAmJiB0aGlzLm9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7XG5cdFx0XHRpZiAoIHZhbHVlID09PSBcIm1pblwiICkge1xuXHRcdFx0XHR0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl92YWx1ZXMoIDAgKTtcblx0XHRcdFx0dGhpcy5vcHRpb25zLnZhbHVlcyA9IG51bGw7XG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gXCJtYXhcIiApIHtcblx0XHRcdFx0dGhpcy5vcHRpb25zLnZhbHVlID0gdGhpcy5fdmFsdWVzKCB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aCAtIDEgKTtcblx0XHRcdFx0dGhpcy5vcHRpb25zLnZhbHVlcyA9IG51bGw7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAkLmlzQXJyYXkoIHRoaXMub3B0aW9ucy52YWx1ZXMgKSApIHtcblx0XHRcdHZhbHNMZW5ndGggPSB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aDtcblx0XHR9XG5cblx0XHR0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApO1xuXG5cdFx0c3dpdGNoICgga2V5ICkge1xuXHRcdFx0Y2FzZSBcIm9yaWVudGF0aW9uXCI6XG5cdFx0XHRcdHRoaXMuX2RldGVjdE9yaWVudGF0aW9uKCk7XG5cdFx0XHRcdHRoaXMuX3JlbW92ZUNsYXNzKCBcInVpLXNsaWRlci1ob3Jpem9udGFsIHVpLXNsaWRlci12ZXJ0aWNhbFwiIClcblx0XHRcdFx0XHQuX2FkZENsYXNzKCBcInVpLXNsaWRlci1cIiArIHRoaXMub3JpZW50YXRpb24gKTtcblx0XHRcdFx0dGhpcy5fcmVmcmVzaFZhbHVlKCk7XG5cdFx0XHRcdGlmICggdGhpcy5vcHRpb25zLnJhbmdlICkge1xuXHRcdFx0XHRcdHRoaXMuX3JlZnJlc2hSYW5nZSggdmFsdWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJlc2V0IHBvc2l0aW9uaW5nIGZyb20gcHJldmlvdXMgb3JpZW50YXRpb25cblx0XHRcdFx0dGhpcy5oYW5kbGVzLmNzcyggdmFsdWUgPT09IFwiaG9yaXpvbnRhbFwiID8gXCJib3R0b21cIiA6IFwibGVmdFwiLCBcIlwiICk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBcInZhbHVlXCI6XG5cdFx0XHRcdHRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlO1xuXHRcdFx0XHR0aGlzLl9yZWZyZXNoVmFsdWUoKTtcblx0XHRcdFx0dGhpcy5fY2hhbmdlKCBudWxsLCAwICk7XG5cdFx0XHRcdHRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIFwidmFsdWVzXCI6XG5cdFx0XHRcdHRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlO1xuXHRcdFx0XHR0aGlzLl9yZWZyZXNoVmFsdWUoKTtcblxuXHRcdFx0XHQvLyBTdGFydCBmcm9tIHRoZSBsYXN0IGhhbmRsZSB0byBwcmV2ZW50IHVucmVhY2hhYmxlIGhhbmRsZXMgKCM5MDQ2KVxuXHRcdFx0XHRmb3IgKCBpID0gdmFsc0xlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkge1xuXHRcdFx0XHRcdHRoaXMuX2NoYW5nZSggbnVsbCwgaSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIFwic3RlcFwiOlxuXHRcdFx0Y2FzZSBcIm1pblwiOlxuXHRcdFx0Y2FzZSBcIm1heFwiOlxuXHRcdFx0XHR0aGlzLl9hbmltYXRlT2ZmID0gdHJ1ZTtcblx0XHRcdFx0dGhpcy5fY2FsY3VsYXRlTmV3TWF4KCk7XG5cdFx0XHRcdHRoaXMuX3JlZnJlc2hWYWx1ZSgpO1xuXHRcdFx0XHR0aGlzLl9hbmltYXRlT2ZmID0gZmFsc2U7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBcInJhbmdlXCI6XG5cdFx0XHRcdHRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlO1xuXHRcdFx0XHR0aGlzLl9yZWZyZXNoKCk7XG5cdFx0XHRcdHRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9LFxuXG5cdF9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHRoaXMuX3N1cGVyKCB2YWx1ZSApO1xuXG5cdFx0dGhpcy5fdG9nZ2xlQ2xhc3MoIG51bGwsIFwidWktc3RhdGUtZGlzYWJsZWRcIiwgISF2YWx1ZSApO1xuXHR9LFxuXG5cdC8vaW50ZXJuYWwgdmFsdWUgZ2V0dGVyXG5cdC8vIF92YWx1ZSgpIHJldHVybnMgdmFsdWUgdHJpbW1lZCBieSBtaW4gYW5kIG1heCwgYWxpZ25lZCBieSBzdGVwXG5cdF92YWx1ZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHZhbCA9IHRoaXMub3B0aW9ucy52YWx1ZTtcblx0XHR2YWwgPSB0aGlzLl90cmltQWxpZ25WYWx1ZSggdmFsICk7XG5cblx0XHRyZXR1cm4gdmFsO1xuXHR9LFxuXG5cdC8vaW50ZXJuYWwgdmFsdWVzIGdldHRlclxuXHQvLyBfdmFsdWVzKCkgcmV0dXJucyBhcnJheSBvZiB2YWx1ZXMgdHJpbW1lZCBieSBtaW4gYW5kIG1heCwgYWxpZ25lZCBieSBzdGVwXG5cdC8vIF92YWx1ZXMoIGluZGV4ICkgcmV0dXJucyBzaW5nbGUgdmFsdWUgdHJpbW1lZCBieSBtaW4gYW5kIG1heCwgYWxpZ25lZCBieSBzdGVwXG5cdF92YWx1ZXM6IGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHR2YXIgdmFsLFxuXHRcdFx0dmFscyxcblx0XHRcdGk7XG5cblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHR2YWwgPSB0aGlzLm9wdGlvbnMudmFsdWVzWyBpbmRleCBdO1xuXHRcdFx0dmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIHZhbCApO1xuXG5cdFx0XHRyZXR1cm4gdmFsO1xuXHRcdH0gZWxzZSBpZiAoIHRoaXMuX2hhc011bHRpcGxlVmFsdWVzKCkgKSB7XG5cblx0XHRcdC8vIC5zbGljZSgpIGNyZWF0ZXMgYSBjb3B5IG9mIHRoZSBhcnJheVxuXHRcdFx0Ly8gdGhpcyBjb3B5IGdldHMgdHJpbW1lZCBieSBtaW4gYW5kIG1heCBhbmQgdGhlbiByZXR1cm5lZFxuXHRcdFx0dmFscyA9IHRoaXMub3B0aW9ucy52YWx1ZXMuc2xpY2UoKTtcblx0XHRcdGZvciAoIGkgPSAwOyBpIDwgdmFscy5sZW5ndGg7IGkgKz0gMSApIHtcblx0XHRcdFx0dmFsc1sgaSBdID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIHZhbHNbIGkgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdmFscztcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIFtdO1xuXHRcdH1cblx0fSxcblxuXHQvLyBSZXR1cm5zIHRoZSBzdGVwLWFsaWduZWQgdmFsdWUgdGhhdCB2YWwgaXMgY2xvc2VzdCB0bywgYmV0d2VlbiAoaW5jbHVzaXZlKSBtaW4gYW5kIG1heFxuXHRfdHJpbUFsaWduVmFsdWU6IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0aWYgKCB2YWwgPD0gdGhpcy5fdmFsdWVNaW4oKSApIHtcblx0XHRcdHJldHVybiB0aGlzLl92YWx1ZU1pbigpO1xuXHRcdH1cblx0XHRpZiAoIHZhbCA+PSB0aGlzLl92YWx1ZU1heCgpICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuX3ZhbHVlTWF4KCk7XG5cdFx0fVxuXHRcdHZhciBzdGVwID0gKCB0aGlzLm9wdGlvbnMuc3RlcCA+IDAgKSA/IHRoaXMub3B0aW9ucy5zdGVwIDogMSxcblx0XHRcdHZhbE1vZFN0ZXAgPSAoIHZhbCAtIHRoaXMuX3ZhbHVlTWluKCkgKSAlIHN0ZXAsXG5cdFx0XHRhbGlnblZhbHVlID0gdmFsIC0gdmFsTW9kU3RlcDtcblxuXHRcdGlmICggTWF0aC5hYnMoIHZhbE1vZFN0ZXAgKSAqIDIgPj0gc3RlcCApIHtcblx0XHRcdGFsaWduVmFsdWUgKz0gKCB2YWxNb2RTdGVwID4gMCApID8gc3RlcCA6ICggLXN0ZXAgKTtcblx0XHR9XG5cblx0XHQvLyBTaW5jZSBKYXZhU2NyaXB0IGhhcyBwcm9ibGVtcyB3aXRoIGxhcmdlIGZsb2F0cywgcm91bmRcblx0XHQvLyB0aGUgZmluYWwgdmFsdWUgdG8gNSBkaWdpdHMgYWZ0ZXIgdGhlIGRlY2ltYWwgcG9pbnQgKHNlZSAjNDEyNClcblx0XHRyZXR1cm4gcGFyc2VGbG9hdCggYWxpZ25WYWx1ZS50b0ZpeGVkKCA1ICkgKTtcblx0fSxcblxuXHRfY2FsY3VsYXRlTmV3TWF4OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgbWF4ID0gdGhpcy5vcHRpb25zLm1heCxcblx0XHRcdG1pbiA9IHRoaXMuX3ZhbHVlTWluKCksXG5cdFx0XHRzdGVwID0gdGhpcy5vcHRpb25zLnN0ZXAsXG5cdFx0XHRhYm92ZU1pbiA9IE1hdGgucm91bmQoICggbWF4IC0gbWluICkgLyBzdGVwICkgKiBzdGVwO1xuXHRcdG1heCA9IGFib3ZlTWluICsgbWluO1xuXHRcdGlmICggbWF4ID4gdGhpcy5vcHRpb25zLm1heCApIHtcblxuXHRcdFx0Ly9JZiBtYXggaXMgbm90IGRpdmlzaWJsZSBieSBzdGVwLCByb3VuZGluZyBvZmYgbWF5IGluY3JlYXNlIGl0cyB2YWx1ZVxuXHRcdFx0bWF4IC09IHN0ZXA7XG5cdFx0fVxuXHRcdHRoaXMubWF4ID0gcGFyc2VGbG9hdCggbWF4LnRvRml4ZWQoIHRoaXMuX3ByZWNpc2lvbigpICkgKTtcblx0fSxcblxuXHRfcHJlY2lzaW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgcHJlY2lzaW9uID0gdGhpcy5fcHJlY2lzaW9uT2YoIHRoaXMub3B0aW9ucy5zdGVwICk7XG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMubWluICE9PSBudWxsICkge1xuXHRcdFx0cHJlY2lzaW9uID0gTWF0aC5tYXgoIHByZWNpc2lvbiwgdGhpcy5fcHJlY2lzaW9uT2YoIHRoaXMub3B0aW9ucy5taW4gKSApO1xuXHRcdH1cblx0XHRyZXR1cm4gcHJlY2lzaW9uO1xuXHR9LFxuXG5cdF9wcmVjaXNpb25PZjogZnVuY3Rpb24oIG51bSApIHtcblx0XHR2YXIgc3RyID0gbnVtLnRvU3RyaW5nKCksXG5cdFx0XHRkZWNpbWFsID0gc3RyLmluZGV4T2YoIFwiLlwiICk7XG5cdFx0cmV0dXJuIGRlY2ltYWwgPT09IC0xID8gMCA6IHN0ci5sZW5ndGggLSBkZWNpbWFsIC0gMTtcblx0fSxcblxuXHRfdmFsdWVNaW46IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm9wdGlvbnMubWluO1xuXHR9LFxuXG5cdF92YWx1ZU1heDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWF4O1xuXHR9LFxuXG5cdF9yZWZyZXNoUmFuZ2U6IGZ1bmN0aW9uKCBvcmllbnRhdGlvbiApIHtcblx0XHRpZiAoIG9yaWVudGF0aW9uID09PSBcInZlcnRpY2FsXCIgKSB7XG5cdFx0XHR0aGlzLnJhbmdlLmNzcyggeyBcIndpZHRoXCI6IFwiXCIsIFwibGVmdFwiOiBcIlwiIH0gKTtcblx0XHR9XG5cdFx0aWYgKCBvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgKSB7XG5cdFx0XHR0aGlzLnJhbmdlLmNzcyggeyBcImhlaWdodFwiOiBcIlwiLCBcImJvdHRvbVwiOiBcIlwiIH0gKTtcblx0XHR9XG5cdH0sXG5cblx0X3JlZnJlc2hWYWx1ZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGxhc3RWYWxQZXJjZW50LCB2YWxQZXJjZW50LCB2YWx1ZSwgdmFsdWVNaW4sIHZhbHVlTWF4LFxuXHRcdFx0b1JhbmdlID0gdGhpcy5vcHRpb25zLnJhbmdlLFxuXHRcdFx0byA9IHRoaXMub3B0aW9ucyxcblx0XHRcdHRoYXQgPSB0aGlzLFxuXHRcdFx0YW5pbWF0ZSA9ICggIXRoaXMuX2FuaW1hdGVPZmYgKSA/IG8uYW5pbWF0ZSA6IGZhbHNlLFxuXHRcdFx0X3NldCA9IHt9O1xuXG5cdFx0aWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkge1xuXHRcdFx0dGhpcy5oYW5kbGVzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHR2YWxQZXJjZW50ID0gKCB0aGF0LnZhbHVlcyggaSApIC0gdGhhdC5fdmFsdWVNaW4oKSApIC8gKCB0aGF0Ll92YWx1ZU1heCgpIC1cblx0XHRcdFx0XHR0aGF0Ll92YWx1ZU1pbigpICkgKiAxMDA7XG5cdFx0XHRcdF9zZXRbIHRoYXQub3JpZW50YXRpb24gPT09IFwiaG9yaXpvbnRhbFwiID8gXCJsZWZ0XCIgOiBcImJvdHRvbVwiIF0gPSB2YWxQZXJjZW50ICsgXCIlXCI7XG5cdFx0XHRcdCQoIHRoaXMgKS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyBcImFuaW1hdGVcIiA6IFwiY3NzXCIgXSggX3NldCwgby5hbmltYXRlICk7XG5cdFx0XHRcdGlmICggdGhhdC5vcHRpb25zLnJhbmdlID09PSB0cnVlICkge1xuXHRcdFx0XHRcdGlmICggdGhhdC5vcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdHRoYXQucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gXCJhbmltYXRlXCIgOiBcImNzc1wiIF0oIHtcblx0XHRcdFx0XHRcdFx0XHRsZWZ0OiB2YWxQZXJjZW50ICsgXCIlXCJcblx0XHRcdFx0XHRcdFx0fSwgby5hbmltYXRlICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIGkgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHRcdHRoYXQucmFuZ2VbIGFuaW1hdGUgPyBcImFuaW1hdGVcIiA6IFwiY3NzXCIgXSgge1xuXHRcdFx0XHRcdFx0XHRcdHdpZHRoOiAoIHZhbFBlcmNlbnQgLSBsYXN0VmFsUGVyY2VudCApICsgXCIlXCJcblx0XHRcdFx0XHRcdFx0fSwge1xuXHRcdFx0XHRcdFx0XHRcdHF1ZXVlOiBmYWxzZSxcblx0XHRcdFx0XHRcdFx0XHRkdXJhdGlvbjogby5hbmltYXRlXG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWYgKCBpID09PSAwICkge1xuXHRcdFx0XHRcdFx0XHR0aGF0LnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/IFwiYW5pbWF0ZVwiIDogXCJjc3NcIiBdKCB7XG5cdFx0XHRcdFx0XHRcdFx0Ym90dG9tOiAoIHZhbFBlcmNlbnQgKSArIFwiJVwiXG5cdFx0XHRcdFx0XHRcdH0sIG8uYW5pbWF0ZSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBpID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHR0aGF0LnJhbmdlWyBhbmltYXRlID8gXCJhbmltYXRlXCIgOiBcImNzc1wiIF0oIHtcblx0XHRcdFx0XHRcdFx0XHRoZWlnaHQ6ICggdmFsUGVyY2VudCAtIGxhc3RWYWxQZXJjZW50ICkgKyBcIiVcIlxuXHRcdFx0XHRcdFx0XHR9LCB7XG5cdFx0XHRcdFx0XHRcdFx0cXVldWU6IGZhbHNlLFxuXHRcdFx0XHRcdFx0XHRcdGR1cmF0aW9uOiBvLmFuaW1hdGVcblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRsYXN0VmFsUGVyY2VudCA9IHZhbFBlcmNlbnQ7XG5cdFx0XHR9ICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhbHVlID0gdGhpcy52YWx1ZSgpO1xuXHRcdFx0dmFsdWVNaW4gPSB0aGlzLl92YWx1ZU1pbigpO1xuXHRcdFx0dmFsdWVNYXggPSB0aGlzLl92YWx1ZU1heCgpO1xuXHRcdFx0dmFsUGVyY2VudCA9ICggdmFsdWVNYXggIT09IHZhbHVlTWluICkgP1xuXHRcdFx0XHRcdCggdmFsdWUgLSB2YWx1ZU1pbiApIC8gKCB2YWx1ZU1heCAtIHZhbHVlTWluICkgKiAxMDAgOlxuXHRcdFx0XHRcdDA7XG5cdFx0XHRfc2V0WyB0aGlzLm9yaWVudGF0aW9uID09PSBcImhvcml6b250YWxcIiA/IFwibGVmdFwiIDogXCJib3R0b21cIiBdID0gdmFsUGVyY2VudCArIFwiJVwiO1xuXHRcdFx0dGhpcy5oYW5kbGUuc3RvcCggMSwgMSApWyBhbmltYXRlID8gXCJhbmltYXRlXCIgOiBcImNzc1wiIF0oIF9zZXQsIG8uYW5pbWF0ZSApO1xuXG5cdFx0XHRpZiAoIG9SYW5nZSA9PT0gXCJtaW5cIiAmJiB0aGlzLm9yaWVudGF0aW9uID09PSBcImhvcml6b250YWxcIiApIHtcblx0XHRcdFx0dGhpcy5yYW5nZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyBcImFuaW1hdGVcIiA6IFwiY3NzXCIgXSgge1xuXHRcdFx0XHRcdHdpZHRoOiB2YWxQZXJjZW50ICsgXCIlXCJcblx0XHRcdFx0fSwgby5hbmltYXRlICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9SYW5nZSA9PT0gXCJtYXhcIiAmJiB0aGlzLm9yaWVudGF0aW9uID09PSBcImhvcml6b250YWxcIiApIHtcblx0XHRcdFx0dGhpcy5yYW5nZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyBcImFuaW1hdGVcIiA6IFwiY3NzXCIgXSgge1xuXHRcdFx0XHRcdHdpZHRoOiAoIDEwMCAtIHZhbFBlcmNlbnQgKSArIFwiJVwiXG5cdFx0XHRcdH0sIG8uYW5pbWF0ZSApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBvUmFuZ2UgPT09IFwibWluXCIgJiYgdGhpcy5vcmllbnRhdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiICkge1xuXHRcdFx0XHR0aGlzLnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/IFwiYW5pbWF0ZVwiIDogXCJjc3NcIiBdKCB7XG5cdFx0XHRcdFx0aGVpZ2h0OiB2YWxQZXJjZW50ICsgXCIlXCJcblx0XHRcdFx0fSwgby5hbmltYXRlICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9SYW5nZSA9PT0gXCJtYXhcIiAmJiB0aGlzLm9yaWVudGF0aW9uID09PSBcInZlcnRpY2FsXCIgKSB7XG5cdFx0XHRcdHRoaXMucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gXCJhbmltYXRlXCIgOiBcImNzc1wiIF0oIHtcblx0XHRcdFx0XHRoZWlnaHQ6ICggMTAwIC0gdmFsUGVyY2VudCApICsgXCIlXCJcblx0XHRcdFx0fSwgby5hbmltYXRlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdF9oYW5kbGVFdmVudHM6IHtcblx0XHRrZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHR2YXIgYWxsb3dlZCwgY3VyVmFsLCBuZXdWYWwsIHN0ZXAsXG5cdFx0XHRcdGluZGV4ID0gJCggZXZlbnQudGFyZ2V0ICkuZGF0YSggXCJ1aS1zbGlkZXItaGFuZGxlLWluZGV4XCIgKTtcblxuXHRcdFx0c3dpdGNoICggZXZlbnQua2V5Q29kZSApIHtcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuSE9NRTpcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuRU5EOlxuXHRcdFx0XHRjYXNlICQudWkua2V5Q29kZS5QQUdFX1VQOlxuXHRcdFx0XHRjYXNlICQudWkua2V5Q29kZS5QQUdFX0RPV046XG5cdFx0XHRcdGNhc2UgJC51aS5rZXlDb2RlLlVQOlxuXHRcdFx0XHRjYXNlICQudWkua2V5Q29kZS5SSUdIVDpcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuRE9XTjpcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuTEVGVDpcblx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdGlmICggIXRoaXMuX2tleVNsaWRpbmcgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9rZXlTbGlkaW5nID0gdHJ1ZTtcblx0XHRcdFx0XHRcdHRoaXMuX2FkZENsYXNzKCAkKCBldmVudC50YXJnZXQgKSwgbnVsbCwgXCJ1aS1zdGF0ZS1hY3RpdmVcIiApO1xuXHRcdFx0XHRcdFx0YWxsb3dlZCA9IHRoaXMuX3N0YXJ0KCBldmVudCwgaW5kZXggKTtcblx0XHRcdFx0XHRcdGlmICggYWxsb3dlZCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cblx0XHRcdHN0ZXAgPSB0aGlzLm9wdGlvbnMuc3RlcDtcblx0XHRcdGlmICggdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSApIHtcblx0XHRcdFx0Y3VyVmFsID0gbmV3VmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjdXJWYWwgPSBuZXdWYWwgPSB0aGlzLnZhbHVlKCk7XG5cdFx0XHR9XG5cblx0XHRcdHN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7XG5cdFx0XHRcdGNhc2UgJC51aS5rZXlDb2RlLkhPTUU6XG5cdFx0XHRcdFx0bmV3VmFsID0gdGhpcy5fdmFsdWVNaW4oKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuRU5EOlxuXHRcdFx0XHRcdG5ld1ZhbCA9IHRoaXMuX3ZhbHVlTWF4KCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJC51aS5rZXlDb2RlLlBBR0VfVVA6XG5cdFx0XHRcdFx0bmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoXG5cdFx0XHRcdFx0XHRjdXJWYWwgKyAoICggdGhpcy5fdmFsdWVNYXgoKSAtIHRoaXMuX3ZhbHVlTWluKCkgKSAvIHRoaXMubnVtUGFnZXMgKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJC51aS5rZXlDb2RlLlBBR0VfRE9XTjpcblx0XHRcdFx0XHRuZXdWYWwgPSB0aGlzLl90cmltQWxpZ25WYWx1ZShcblx0XHRcdFx0XHRcdGN1clZhbCAtICggKCB0aGlzLl92YWx1ZU1heCgpIC0gdGhpcy5fdmFsdWVNaW4oKSApIC8gdGhpcy5udW1QYWdlcyApICk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJC51aS5rZXlDb2RlLlVQOlxuXHRcdFx0XHRjYXNlICQudWkua2V5Q29kZS5SSUdIVDpcblx0XHRcdFx0XHRpZiAoIGN1clZhbCA9PT0gdGhpcy5fdmFsdWVNYXgoKSApIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIGN1clZhbCArIHN0ZXAgKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuRE9XTjpcblx0XHRcdFx0Y2FzZSAkLnVpLmtleUNvZGUuTEVGVDpcblx0XHRcdFx0XHRpZiAoIGN1clZhbCA9PT0gdGhpcy5fdmFsdWVNaW4oKSApIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIGN1clZhbCAtIHN0ZXAgKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5fc2xpZGUoIGV2ZW50LCBpbmRleCwgbmV3VmFsICk7XG5cdFx0fSxcblx0XHRrZXl1cDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIGluZGV4ID0gJCggZXZlbnQudGFyZ2V0ICkuZGF0YSggXCJ1aS1zbGlkZXItaGFuZGxlLWluZGV4XCIgKTtcblxuXHRcdFx0aWYgKCB0aGlzLl9rZXlTbGlkaW5nICkge1xuXHRcdFx0XHR0aGlzLl9rZXlTbGlkaW5nID0gZmFsc2U7XG5cdFx0XHRcdHRoaXMuX3N0b3AoIGV2ZW50LCBpbmRleCApO1xuXHRcdFx0XHR0aGlzLl9jaGFuZ2UoIGV2ZW50LCBpbmRleCApO1xuXHRcdFx0XHR0aGlzLl9yZW1vdmVDbGFzcyggJCggZXZlbnQudGFyZ2V0ICksIG51bGwsIFwidWktc3RhdGUtYWN0aXZlXCIgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxufSApICk7XG4iLCIoIGZ1bmN0aW9uKCBmYWN0b3J5ICkge1xuXHRpZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXG5cdFx0Ly8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLlxuXHRcdGRlZmluZSggWyBcImpxdWVyeVwiIF0sIGZhY3RvcnkgKTtcblx0fSBlbHNlIHtcblxuXHRcdC8vIEJyb3dzZXIgZ2xvYmFsc1xuXHRcdGZhY3RvcnkoIGpRdWVyeSApO1xuXHR9XG59ICggZnVuY3Rpb24oICQgKSB7XG5cbiQudWkgPSAkLnVpIHx8IHt9O1xuXG5yZXR1cm4gJC51aS52ZXJzaW9uID0gXCIxLjEyLjFcIjtcblxufSApICk7XG4iLCIvKiFcbiAqIGpRdWVyeSBVSSBNb3VzZSAxLjEyLjFcbiAqIGh0dHA6Ly9qcXVlcnl1aS5jb21cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxuICovXG5cbi8vPj5sYWJlbDogTW91c2Vcbi8vPj5ncm91cDogV2lkZ2V0c1xuLy8+PmRlc2NyaXB0aW9uOiBBYnN0cmFjdHMgbW91c2UtYmFzZWQgaW50ZXJhY3Rpb25zIHRvIGFzc2lzdCBpbiBjcmVhdGluZyBjZXJ0YWluIHdpZGdldHMuXG4vLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vbW91c2UvXG5cbiggZnVuY3Rpb24oIGZhY3RvcnkgKSB7XG5cdGlmICggdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQgKSB7XG5cblx0XHQvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuXG5cdFx0ZGVmaW5lKCBbXG5cdFx0XHRcImpxdWVyeVwiLFxuXHRcdFx0XCIuLi9pZVwiLFxuXHRcdFx0XCIuLi92ZXJzaW9uXCIsXG5cdFx0XHRcIi4uL3dpZGdldFwiXG5cdFx0XSwgZmFjdG9yeSApO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gQnJvd3NlciBnbG9iYWxzXG5cdFx0ZmFjdG9yeSggalF1ZXJ5ICk7XG5cdH1cbn0oIGZ1bmN0aW9uKCAkICkge1xuXG52YXIgbW91c2VIYW5kbGVkID0gZmFsc2U7XG4kKCBkb2N1bWVudCApLm9uKCBcIm1vdXNldXBcIiwgZnVuY3Rpb24oKSB7XG5cdG1vdXNlSGFuZGxlZCA9IGZhbHNlO1xufSApO1xuXG5yZXR1cm4gJC53aWRnZXQoIFwidWkubW91c2VcIiwge1xuXHR2ZXJzaW9uOiBcIjEuMTIuMVwiLFxuXHRvcHRpb25zOiB7XG5cdFx0Y2FuY2VsOiBcImlucHV0LCB0ZXh0YXJlYSwgYnV0dG9uLCBzZWxlY3QsIG9wdGlvblwiLFxuXHRcdGRpc3RhbmNlOiAxLFxuXHRcdGRlbGF5OiAwXG5cdH0sXG5cdF9tb3VzZUluaXQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciB0aGF0ID0gdGhpcztcblxuXHRcdHRoaXMuZWxlbWVudFxuXHRcdFx0Lm9uKCBcIm1vdXNlZG93bi5cIiArIHRoaXMud2lkZ2V0TmFtZSwgZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRyZXR1cm4gdGhhdC5fbW91c2VEb3duKCBldmVudCApO1xuXHRcdFx0fSApXG5cdFx0XHQub24oIFwiY2xpY2suXCIgKyB0aGlzLndpZGdldE5hbWUsIGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0aWYgKCB0cnVlID09PSAkLmRhdGEoIGV2ZW50LnRhcmdldCwgdGhhdC53aWRnZXROYW1lICsgXCIucHJldmVudENsaWNrRXZlbnRcIiApICkge1xuXHRcdFx0XHRcdCQucmVtb3ZlRGF0YSggZXZlbnQudGFyZ2V0LCB0aGF0LndpZGdldE5hbWUgKyBcIi5wcmV2ZW50Q2xpY2tFdmVudFwiICk7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cblx0XHR0aGlzLnN0YXJ0ZWQgPSBmYWxzZTtcblx0fSxcblxuXHQvLyBUT0RPOiBtYWtlIHN1cmUgZGVzdHJveWluZyBvbmUgaW5zdGFuY2Ugb2YgbW91c2UgZG9lc24ndCBtZXNzIHdpdGhcblx0Ly8gb3RoZXIgaW5zdGFuY2VzIG9mIG1vdXNlXG5cdF9tb3VzZURlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMuZWxlbWVudC5vZmYoIFwiLlwiICsgdGhpcy53aWRnZXROYW1lICk7XG5cdFx0aWYgKCB0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSApIHtcblx0XHRcdHRoaXMuZG9jdW1lbnRcblx0XHRcdFx0Lm9mZiggXCJtb3VzZW1vdmUuXCIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlIClcblx0XHRcdFx0Lm9mZiggXCJtb3VzZXVwLlwiICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZVVwRGVsZWdhdGUgKTtcblx0XHR9XG5cdH0sXG5cblx0X21vdXNlRG93bjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0Ly8gZG9uJ3QgbGV0IG1vcmUgdGhhbiBvbmUgd2lkZ2V0IGhhbmRsZSBtb3VzZVN0YXJ0XG5cdFx0aWYgKCBtb3VzZUhhbmRsZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5fbW91c2VNb3ZlZCA9IGZhbHNlO1xuXG5cdFx0Ly8gV2UgbWF5IGhhdmUgbWlzc2VkIG1vdXNldXAgKG91dCBvZiB3aW5kb3cpXG5cdFx0KCB0aGlzLl9tb3VzZVN0YXJ0ZWQgJiYgdGhpcy5fbW91c2VVcCggZXZlbnQgKSApO1xuXG5cdFx0dGhpcy5fbW91c2VEb3duRXZlbnQgPSBldmVudDtcblxuXHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdGJ0bklzTGVmdCA9ICggZXZlbnQud2hpY2ggPT09IDEgKSxcblxuXHRcdFx0Ly8gZXZlbnQudGFyZ2V0Lm5vZGVOYW1lIHdvcmtzIGFyb3VuZCBhIGJ1ZyBpbiBJRSA4IHdpdGhcblx0XHRcdC8vIGRpc2FibGVkIGlucHV0cyAoIzc2MjApXG5cdFx0XHRlbElzQ2FuY2VsID0gKCB0eXBlb2YgdGhpcy5vcHRpb25zLmNhbmNlbCA9PT0gXCJzdHJpbmdcIiAmJiBldmVudC50YXJnZXQubm9kZU5hbWUgP1xuXHRcdFx0XHQkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCB0aGlzLm9wdGlvbnMuY2FuY2VsICkubGVuZ3RoIDogZmFsc2UgKTtcblx0XHRpZiAoICFidG5Jc0xlZnQgfHwgZWxJc0NhbmNlbCB8fCAhdGhpcy5fbW91c2VDYXB0dXJlKCBldmVudCApICkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0dGhpcy5tb3VzZURlbGF5TWV0ID0gIXRoaXMub3B0aW9ucy5kZWxheTtcblx0XHRpZiAoICF0aGlzLm1vdXNlRGVsYXlNZXQgKSB7XG5cdFx0XHR0aGlzLl9tb3VzZURlbGF5VGltZXIgPSBzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dGhhdC5tb3VzZURlbGF5TWV0ID0gdHJ1ZTtcblx0XHRcdH0sIHRoaXMub3B0aW9ucy5kZWxheSApO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5fbW91c2VEaXN0YW5jZU1ldCggZXZlbnQgKSAmJiB0aGlzLl9tb3VzZURlbGF5TWV0KCBldmVudCApICkge1xuXHRcdFx0dGhpcy5fbW91c2VTdGFydGVkID0gKCB0aGlzLl9tb3VzZVN0YXJ0KCBldmVudCApICE9PSBmYWxzZSApO1xuXHRcdFx0aWYgKCAhdGhpcy5fbW91c2VTdGFydGVkICkge1xuXHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDbGljayBldmVudCBtYXkgbmV2ZXIgaGF2ZSBmaXJlZCAoR2Vja28gJiBPcGVyYSlcblx0XHRpZiAoIHRydWUgPT09ICQuZGF0YSggZXZlbnQudGFyZ2V0LCB0aGlzLndpZGdldE5hbWUgKyBcIi5wcmV2ZW50Q2xpY2tFdmVudFwiICkgKSB7XG5cdFx0XHQkLnJlbW92ZURhdGEoIGV2ZW50LnRhcmdldCwgdGhpcy53aWRnZXROYW1lICsgXCIucHJldmVudENsaWNrRXZlbnRcIiApO1xuXHRcdH1cblxuXHRcdC8vIFRoZXNlIGRlbGVnYXRlcyBhcmUgcmVxdWlyZWQgdG8ga2VlcCBjb250ZXh0XG5cdFx0dGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRyZXR1cm4gdGhhdC5fbW91c2VNb3ZlKCBldmVudCApO1xuXHRcdH07XG5cdFx0dGhpcy5fbW91c2VVcERlbGVnYXRlID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0cmV0dXJuIHRoYXQuX21vdXNlVXAoIGV2ZW50ICk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZG9jdW1lbnRcblx0XHRcdC5vbiggXCJtb3VzZW1vdmUuXCIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlIClcblx0XHRcdC5vbiggXCJtb3VzZXVwLlwiICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZVVwRGVsZWdhdGUgKTtcblxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRtb3VzZUhhbmRsZWQgPSB0cnVlO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdF9tb3VzZU1vdmU6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdC8vIE9ubHkgY2hlY2sgZm9yIG1vdXNldXBzIG91dHNpZGUgdGhlIGRvY3VtZW50IGlmIHlvdSd2ZSBtb3ZlZCBpbnNpZGUgdGhlIGRvY3VtZW50XG5cdFx0Ly8gYXQgbGVhc3Qgb25jZS4gVGhpcyBwcmV2ZW50cyB0aGUgZmlyaW5nIG9mIG1vdXNldXAgaW4gdGhlIGNhc2Ugb2YgSUU8OSwgd2hpY2ggd2lsbFxuXHRcdC8vIGZpcmUgYSBtb3VzZW1vdmUgZXZlbnQgaWYgY29udGVudCBpcyBwbGFjZWQgdW5kZXIgdGhlIGN1cnNvci4gU2VlICM3Nzc4XG5cdFx0Ly8gU3VwcG9ydDogSUUgPDlcblx0XHRpZiAoIHRoaXMuX21vdXNlTW92ZWQgKSB7XG5cblx0XHRcdC8vIElFIG1vdXNldXAgY2hlY2sgLSBtb3VzZXVwIGhhcHBlbmVkIHdoZW4gbW91c2Ugd2FzIG91dCBvZiB3aW5kb3dcblx0XHRcdGlmICggJC51aS5pZSAmJiAoICFkb2N1bWVudC5kb2N1bWVudE1vZGUgfHwgZG9jdW1lbnQuZG9jdW1lbnRNb2RlIDwgOSApICYmXG5cdFx0XHRcdFx0IWV2ZW50LmJ1dHRvbiApIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX21vdXNlVXAoIGV2ZW50ICk7XG5cblx0XHRcdC8vIElmcmFtZSBtb3VzZXVwIGNoZWNrIC0gbW91c2V1cCBvY2N1cnJlZCBpbiBhbm90aGVyIGRvY3VtZW50XG5cdFx0XHR9IGVsc2UgaWYgKCAhZXZlbnQud2hpY2ggKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDw9OCAtIDlcblx0XHRcdFx0Ly8gU2FmYXJpIHNldHMgd2hpY2ggdG8gMCBpZiB5b3UgcHJlc3MgYW55IG9mIHRoZSBmb2xsb3dpbmcga2V5c1xuXHRcdFx0XHQvLyBkdXJpbmcgYSBkcmFnICgjMTQ0NjEpXG5cdFx0XHRcdGlmICggZXZlbnQub3JpZ2luYWxFdmVudC5hbHRLZXkgfHwgZXZlbnQub3JpZ2luYWxFdmVudC5jdHJsS2V5IHx8XG5cdFx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQub3JpZ2luYWxFdmVudC5zaGlmdEtleSApIHtcblx0XHRcdFx0XHR0aGlzLmlnbm9yZU1pc3NpbmdXaGljaCA9IHRydWU7XG5cdFx0XHRcdH0gZWxzZSBpZiAoICF0aGlzLmlnbm9yZU1pc3NpbmdXaGljaCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5fbW91c2VVcCggZXZlbnQgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZXZlbnQud2hpY2ggfHwgZXZlbnQuYnV0dG9uICkge1xuXHRcdFx0dGhpcy5fbW91c2VNb3ZlZCA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLl9tb3VzZVN0YXJ0ZWQgKSB7XG5cdFx0XHR0aGlzLl9tb3VzZURyYWcoIGV2ZW50ICk7XG5cdFx0XHRyZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMuX21vdXNlRGlzdGFuY2VNZXQoIGV2ZW50ICkgJiYgdGhpcy5fbW91c2VEZWxheU1ldCggZXZlbnQgKSApIHtcblx0XHRcdHRoaXMuX21vdXNlU3RhcnRlZCA9XG5cdFx0XHRcdCggdGhpcy5fbW91c2VTdGFydCggdGhpcy5fbW91c2VEb3duRXZlbnQsIGV2ZW50ICkgIT09IGZhbHNlICk7XG5cdFx0XHQoIHRoaXMuX21vdXNlU3RhcnRlZCA/IHRoaXMuX21vdXNlRHJhZyggZXZlbnQgKSA6IHRoaXMuX21vdXNlVXAoIGV2ZW50ICkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gIXRoaXMuX21vdXNlU3RhcnRlZDtcblx0fSxcblxuXHRfbW91c2VVcDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdHRoaXMuZG9jdW1lbnRcblx0XHRcdC5vZmYoIFwibW91c2Vtb3ZlLlwiICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSApXG5cdFx0XHQub2ZmKCBcIm1vdXNldXAuXCIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApO1xuXG5cdFx0aWYgKCB0aGlzLl9tb3VzZVN0YXJ0ZWQgKSB7XG5cdFx0XHR0aGlzLl9tb3VzZVN0YXJ0ZWQgPSBmYWxzZTtcblxuXHRcdFx0aWYgKCBldmVudC50YXJnZXQgPT09IHRoaXMuX21vdXNlRG93bkV2ZW50LnRhcmdldCApIHtcblx0XHRcdFx0JC5kYXRhKCBldmVudC50YXJnZXQsIHRoaXMud2lkZ2V0TmFtZSArIFwiLnByZXZlbnRDbGlja0V2ZW50XCIsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5fbW91c2VTdG9wKCBldmVudCApO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5fbW91c2VEZWxheVRpbWVyICkge1xuXHRcdFx0Y2xlYXJUaW1lb3V0KCB0aGlzLl9tb3VzZURlbGF5VGltZXIgKTtcblx0XHRcdGRlbGV0ZSB0aGlzLl9tb3VzZURlbGF5VGltZXI7XG5cdFx0fVxuXG5cdFx0dGhpcy5pZ25vcmVNaXNzaW5nV2hpY2ggPSBmYWxzZTtcblx0XHRtb3VzZUhhbmRsZWQgPSBmYWxzZTtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHR9LFxuXG5cdF9tb3VzZURpc3RhbmNlTWV0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0cmV0dXJuICggTWF0aC5tYXgoXG5cdFx0XHRcdE1hdGguYWJzKCB0aGlzLl9tb3VzZURvd25FdmVudC5wYWdlWCAtIGV2ZW50LnBhZ2VYICksXG5cdFx0XHRcdE1hdGguYWJzKCB0aGlzLl9tb3VzZURvd25FdmVudC5wYWdlWSAtIGV2ZW50LnBhZ2VZIClcblx0XHRcdCkgPj0gdGhpcy5vcHRpb25zLmRpc3RhbmNlXG5cdFx0KTtcblx0fSxcblxuXHRfbW91c2VEZWxheU1ldDogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlRGVsYXlNZXQ7XG5cdH0sXG5cblx0Ly8gVGhlc2UgYXJlIHBsYWNlaG9sZGVyIG1ldGhvZHMsIHRvIGJlIG92ZXJyaWRlbiBieSBleHRlbmRpbmcgcGx1Z2luXG5cdF9tb3VzZVN0YXJ0OiBmdW5jdGlvbiggLyogZXZlbnQgKi8gKSB7fSxcblx0X21vdXNlRHJhZzogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge30sXG5cdF9tb3VzZVN0b3A6IGZ1bmN0aW9uKCAvKiBldmVudCAqLyApIHt9LFxuXHRfbW91c2VDYXB0dXJlOiBmdW5jdGlvbiggLyogZXZlbnQgKi8gKSB7IHJldHVybiB0cnVlOyB9XG59ICk7XG5cbn0gKSApO1xuIiwiLyohXG4gKiBqUXVlcnkgVUkgS2V5Y29kZSAxLjEyLjFcbiAqIGh0dHA6Ly9qcXVlcnl1aS5jb21cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxuICovXG5cbi8vPj5sYWJlbDogS2V5Y29kZVxuLy8+Pmdyb3VwOiBDb3JlXG4vLz4+ZGVzY3JpcHRpb246IFByb3ZpZGUga2V5Y29kZXMgYXMga2V5bmFtZXNcbi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9qUXVlcnkudWkua2V5Q29kZS9cblxuKCBmdW5jdGlvbiggZmFjdG9yeSApIHtcblx0aWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblxuXHRcdC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cblx0XHRkZWZpbmUoIFsgXCJqcXVlcnlcIiwgXCIuL3ZlcnNpb25cIiBdLCBmYWN0b3J5ICk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBCcm93c2VyIGdsb2JhbHNcblx0XHRmYWN0b3J5KCBqUXVlcnkgKTtcblx0fVxufSAoIGZ1bmN0aW9uKCAkICkge1xucmV0dXJuICQudWkua2V5Q29kZSA9IHtcblx0QkFDS1NQQUNFOiA4LFxuXHRDT01NQTogMTg4LFxuXHRERUxFVEU6IDQ2LFxuXHRET1dOOiA0MCxcblx0RU5EOiAzNSxcblx0RU5URVI6IDEzLFxuXHRFU0NBUEU6IDI3LFxuXHRIT01FOiAzNixcblx0TEVGVDogMzcsXG5cdFBBR0VfRE9XTjogMzQsXG5cdFBBR0VfVVA6IDMzLFxuXHRQRVJJT0Q6IDE5MCxcblx0UklHSFQ6IDM5LFxuXHRTUEFDRTogMzIsXG5cdFRBQjogOSxcblx0VVA6IDM4XG59O1xuXG59ICkgKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=